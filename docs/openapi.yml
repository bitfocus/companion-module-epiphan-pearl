openapi: 3.0.0
info:
  title: 'Pearl device REST API'
  description: 'Epiphan Pearl devices REST API'
  contact:
    name: 'Epiphan Video'
    url: 'https://www.epiphan.com/support/'
    email: support@epiphan.com
  license:
    name: 'MIT License'
    url: 'https://opensource.org/licenses/MIT'
  version: v2.0
servers:
  -
    url: /api/v2.0
paths:
  /afu:
    get:
      tags:
        - AFU
      summary: 'Returns a list of AFU ID''s'
      description: 'Limited to 1 as of firmware 4.24.1'
      responses:
        '200':
          description: 'A list of AFU ID''s'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/AfuId'
              example:
                status: ok
                result:
                  -
                    id: '0'
  /afu/status:
    get:
      tags:
        - AFU
      summary: 'Get all AFU''s status'
      responses:
        '200':
          description: 'Returns AFU''s status: state, protocol and files queue'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/IdentifiedAfuStatus'
              example:
                status: ok
                result:
                  -
                    id: '0'
                    status:
                      state: idle
                      protocol: webdav
                      queue:
                        files: 0
                        size: 0
  '/afu/{aid}/status':
    get:
      tags:
        - AFU
      summary: 'Get specified AFU''s status'
      parameters:
        -
          $ref: '#/components/parameters/afuId'
      responses:
        '200':
          description: 'Returns given AFU''s status: state, protocol and files queue'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/AfuStatus'
              example:
                status: ok
                result:
                  state: uploading
                  protocol: webdav
                  queue:
                    files: 1
                    size: 184323243
                  file:
                    recorder: '1'
                    id: 'VGA.1736858583.Test channel.mp4'
                    uploaded: 0
                    size: 184323243
        '404':
          $ref: '#/components/responses/afuNotFound'
  '/channels/{cid}/publishers/{pid}':
    delete:
      tags:
        - Publishers
      summary: 'Delete the specified publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Successful deletion of the specified publisher'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              examples:
                'First channel, fourth publisher':
                  value:
                    status: ok
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers/control/start':
    post:
      tags:
        - Publishers
      summary: 'Starts all publishers of the specified channel.'
      description: 'The method does not wait for publishers to start. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'Start command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/publishers/control/stop':
    post:
      tags:
        - Publishers
      summary: 'Stops all publishers of the specified channel.'
      description: 'The method does not wait for publishers to stop. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'Stop command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/publishers/{pid}/control/start':
    post:
      tags:
        - Publishers
      summary: 'Starts the specified publisher'
      description: 'The method does not wait for the publisher to start. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Start command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers/{pid}/control/stop':
    post:
      tags:
        - Publishers
      summary: 'Stops the specified publisher'
      description: 'The method does not wait for the publisher to stop. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Stop command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers/type':
    get:
      tags:
        - Publishers
      summary: 'Gets all publisher types of the specified channel'
      description: 'Returns a list of publishers'' type of the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'A list of publishers'' type retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/IdentifiedPublisherType'
              examples:
                'First channel':
                  value:
                    status: ok
                    result:
                      -
                        id: '0'
                        type: rtmp
                        name: 'Stream 1'
                      -
                        id: '1'
                        type: rtsp
                        name: 'Stream 2'
                      -
                        id: '2'
                        type: srt
                        name: 'Stream 3'
                'Second channel':
                  value:
                    status: ok
                    result: []
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/publishers/{pid}/type':
    get:
      tags:
        - Publishers
      summary: 'Get publisher type'
      description: 'Returns the type of the specified publisher in the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Publisher type retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/PublisherType'
              examples:
                'First channel':
                  value:
                    status: ok
                    result: rtsp
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers/{pid}/name':
    get:
      tags:
        - Publishers
      summary: 'Get publisher name'
      description: 'Returns the display name of the specified publisher in the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Publisher name retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    maxLength: 128
                    minLength: 1
                    type: string
              example:
                status: ok
                result: 'Stream 2'
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
    put:
      tags:
        - Publishers
      summary: 'Update publisher name'
      description: 'Updates the display name of the specified publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
        -
          name: name
          in: query
          required: true
          schema:
            maxLength: 128
            minLength: 1
            type: string
            description: 'New publisher name'
          examples:
            'First channel':
              value: 'Stream1 Updated'
      responses:
        '200':
          description: 'Publisher name updated successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    maxLength: 128
                    minLength: 1
                    type: string
              example:
                status: ok
                result: 'Stream1 Updated'
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers/status':
    get:
      tags:
        - Publishers
      summary: 'Get all channel publisher'' status'
      description: 'Returns a list of all publishers'' status of the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'A list of all publisher'' status retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/IdentifiedPublisherStatus'
              examples:
                'First channel':
                  value:
                    status: ok
                    result:
                      -
                        id: '0'
                        type: rtmp
                        status:
                          is_configured: true
                          started: false
                          state: stopped
                      -
                        id: '1'
                        type: rtsp
                        status:
                          is_configured: true
                          started: false
                          state: stopped
                      -
                        id: '2'
                        type: srt
                        status:
                          is_configured: true
                          started: true
                          state: started
                          duration: 188
                          since: 1734472241
                          statistics:
                            total:
                              duration: 182
                              pkt_sent: 62875
                              pkt_loss: 0
                              pkt_retrans: 0
                              pkt_drop: 0
                              latency: 125
                              byte_sent: 80118160
                              byte_retrans: 0
                              byte_drop: 0
                            current:
                              duration: 20
                              send_rate: 3.61
                              loss_ratio: 0
                              retrans_ratio: 0
                              drop_ratio: 0
                              latency: 125
                              rtt: 342
                              estimated_bandwidth: 318.624
                              send_buffer: 1000
                              stream_id: ''
                              ip: 192.168.86.102
                          reconnections: 0
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/publishers/{pid}/status':
    get:
      tags:
        - Publishers
      summary: 'Get publisher status'
      description: 'Returns the status of the specified publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Publisher status retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/PublisherStatus'
              examples:
                'First channel':
                  value:
                    status: ok
                    result:
                      is_configured: true
                      started: true
                      state: started
                      duration: 49
                      since: 1734472241
                      statistics:
                        total:
                          duration: 42
                          pkt_sent: 13944
                          pkt_loss: 0
                          pkt_retrans: 0
                          pkt_drop: 0
                          latency: 125
                          byte_sent: 17763272
                          byte_retrans: 0
                          byte_drop: 0
                        current:
                          duration: 20
                          send_rate: 3.55
                          loss_ratio: 0
                          retrans_ratio: 0
                          drop_ratio: 0
                          latency: 125
                          rtt: 699
                          estimated_bandwidth: 299.736
                          send_buffer: 1000
                          stream_id: ''
                          ip: 192.168.86.102
                      reconnections: 0
                'Second channel':
                  value:
                    status: ok
                    result:
                      is_configured: true
                      started: false
                      state: stopped
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  '/channels/{cid}/publishers':
    get:
      tags:
        - Publishers
      summary: 'Returns a list of available publishers (streams) with their properties for the specified Channel.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'A list of publisher objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PublisherId'
              examples:
                'First channel':
                  value:
                    status: ok
                    result:
                      -
                        id: '0'
                        type: srt
                        name: 'Stream 1'
        '404':
          $ref: '#/components/responses/channelNotFound'
    post:
      tags:
        - Publishers
      summary: 'Add a new publisher for the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - settings
              type: object
              properties:
                name:
                  type: string
                settings:
                  $ref: '#/components/schemas/PublisherSettings'
            examples:
              'RTMP push':
                value:
                  name: 'New RTMP'
                  settings:
                    rtmp:
                      disable_audio: false
                      url: 'rtmp://192.168.86.51'
                      stream: ''
                      username: ''
                      password: ''
                    type: rtmp
                    common:
                      enabled: false
                      single_touch: false
              'RTSP announce':
                value:
                  name: 'New RTSP'
                  settings:
                    rtsp:
                      disable_audio: false
                      url: 'rtsp://192.168.86.51'
                      transport: udp
                      username: ''
                      password: ''
                    type: rtsp
                    common:
                      enabled: false
                      single_touch: false
              'MPEG-TS UDP push':
                value:
                  name: 'New MPEG-TS UDP'
                  settings:
                    mpegts_udp:
                      port: 6004
                      address: ''
                      sap: false
                      sap_ip: ''
                      sap_channel: 0
                      sap_play_group: ''
                      limit_bandwidth: false
                      limit_bandwidth_rate: 0
                    type: mpegts-udp
                    common:
                      enabled: false
                      single_touch: false
              'MPEG-TS RTP/UDP push':
                value:
                  name: 'New MPEG-TS RTP/UDP'
                  settings:
                    mpegts_rtp:
                      port: 6004
                      address: ''
                      sap: false
                      sap_ip: ''
                      sap_channel: 0
                      sap_play_group: ''
                      limit_bandwidth: false
                      limit_bandwidth_rate: 0
                    type: mpegts-rtp
                    common:
                      enabled: false
                      single_touch: false
              'RTP/UDP push':
                value:
                  name: 'New RTP/UDP'
                  settings:
                    rtp_udp:
                      audio_port: 6000
                      video_port: 6002
                      address: ''
                      sap: false
                      sap_ip: ''
                      sap_channel: 0
                      sap_play_group: ''
                      limit_bandwidth: false
                      limit_bandwidth_rate: 0
                    type: rtp-udp
                    common:
                      enabled: false
                      single_touch: false
              'SRT push (Caller)':
                value:
                  name: 'New SRT (Caller)'
                  settings:
                    srt:
                      url: 'srt://127.0.0.1:19861'
                      stream_id: ''
                      disable_audio: false
                      mode: caller
                      latency: 125
                      bw_recovery_overhead: 25
                      encryption:
                        keylength: 128
                        passphrase: AnyPassphrase
                    type: srt
                    common:
                      enabled: false
                      single_touch: false
              'SRT push (Listener)':
                value:
                  name: 'New SRT (Listener)'
                  settings:
                    srt:
                      port: 19861
                      disable_audio: false
                      mode: listener
                      latency: 125
                      bw_recovery_overhead: 25
                      encryption:
                        keylength: 128
                        passphrase: AnyPassphrase
                    type: srt
                    common:
                      enabled: false
                      single_touch: true
              'SRT push (Rendezvous)':
                value:
                  name: 'New SRT (Rendezvous)'
                  settings:
                    srt:
                      url: 'srt://192.168.86.51:19862'
                      disable_audio: false
                      mode: rendezvous
                      latency: 125
                      bw_recovery_overhead: 25
                      encryption: null
                    type: srt
                    common:
                      enabled: false
                      single_touch: true
              'HLS push':
                value:
                  name: 'New HLS'
                  settings:
                    hls:
                      disable_audio: false
                      url: ''
                      master_pl_url: ''
                      username: ''
                      password: ''
                      segment_duration: 6
                      list_size: 6
                      user_agent: ''
                      http_method: POST
                      media_seg_tmpl: ''
                    type: hls
                    common:
                      enabled: false
                      single_touch: false
              NDI®:
                value:
                  name: 'New NDI'
                  settings:
                    ndi:
                      disable_audio: false
                      ndi_name: ''
                      ndi_group: ''
                    type: ndi
                    common:
                      enabled: false
                      single_touch: false
      responses:
        '201':
          description: 'New publisher added successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/IdentifiedPublisherSettings'
              examples:
                'RTMP push':
                  value:
                    status: ok
                    result:
                      id: '0'
                      name: 'New RTMP'
                      settings:
                        rtmp:
                          disable_audio: false
                          url: 'rtmp://192.168.86.51'
                          stream: ''
                          username: ''
                          password: ''
                        type: rtmp
                        common:
                          enabled: false
                          single_touch: false
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/publishers/{pid}/settings':
    get:
      tags:
        - Publishers
      summary: 'Get publisher settings'
      description: 'Returns the settings of the specified publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      responses:
        '200':
          description: 'Publisher settings retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/PublisherSettings'
              examples:
                'RTMP push':
                  value:
                    status: ok
                    result:
                      rtmp:
                        disable_audio: false
                        url: ''
                        stream: ''
                        username: ''
                        password: ''
                      type: rtmp
                      common:
                        enabled: false
                        single_touch: false
                'RTSP announce':
                  value:
                    status: ok
                    result:
                      rtsp:
                        disable_audio: false
                        url: ''
                        transport: udp
                        username: ''
                        password: ''
                      type: rtsp
                      common:
                        enabled: false
                        single_touch: false
                'MPEG-TS UDP push':
                  value:
                    status: ok
                    result:
                      mpegts_udp:
                        port: 6004
                        address: ''
                        sap: false
                        sap_ip: ''
                        sap_channel: 0
                        sap_play_group: ''
                        limit_bandwidth: false
                        limit_bandwidth_rate: 0
                      type: mpegts-udp
                      common:
                        enabled: false
                        single_touch: false
                'MPEG-TS RTP/UDP push':
                  value:
                    status: ok
                    result:
                      mpegts_rtp:
                        port: 6004
                        address: ''
                        sap: false
                        sap_ip: ''
                        sap_channel: 0
                        sap_play_group: ''
                        limit_bandwidth: false
                        limit_bandwidth_rate: 0
                      type: mpegts-rtp
                      common:
                        enabled: false
                        single_touch: false
                'RTP/UDP push':
                  value:
                    status: ok
                    result:
                      rtp_udp:
                        audio_port: 6000
                        video_port: 6002
                        address: ''
                        sap: false
                        sap_ip: ''
                        sap_channel: 0
                        sap_play_group: ''
                        limit_bandwidth: false
                        limit_bandwidth_rate: 0
                      type: rtp-udp
                      common:
                        enabled: false
                        single_touch: false
                'SRT push (Caller)':
                  value:
                    status: ok
                    result:
                      srt:
                        url: ''
                        stream_id: ''
                        disable_audio: false
                        mode: caller
                        latency: 125
                        bw_recovery_overhead: 25
                        encryption: null
                      type: srt
                      common:
                        enabled: false
                        single_touch: false
                'SRT push (Listener)':
                  value:
                    status: ok
                    result:
                      srt:
                        port: 1029
                        disable_audio: false
                        mode: listener
                        latency: 125
                        bw_recovery_overhead: 25
                        encryption: null
                      type: srt
                      common:
                        enabled: false
                        single_touch: true
                'SRT push (Rendezvous)':
                  value:
                    status: ok
                    result:
                      srt:
                        url: 'srt://192.168.1.90:14000'
                        disable_audio: false
                        mode: rendezvous
                        latency: 125
                        bw_recovery_overhead: 25
                        encryption: null
                      type: srt
                      common:
                        enabled: false
                        single_touch: true
                'HLS push':
                  value:
                    status: ok
                    result:
                      hls:
                        disable_audio: false
                        url: ''
                        master_pl_url: ''
                        username: ''
                        password: ''
                        segment_duration: 6
                        list_size: 6
                        user_agent: ''
                        http_method: POST
                        media_seg_tmpl: ''
                      type: hls
                      common:
                        enabled: false
                        single_touch: false
                NDI®:
                  value:
                    status: ok
                    result:
                      ndi:
                        disable_audio: false
                        ndi_name: ''
                        ndi_group: ''
                      type: ndi
                      common:
                        enabled: false
                        single_touch: false
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
    put:
      tags:
        - Publishers
      summary: 'Completely update settings for the publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherSettings'
            examples:
              'RTMP push':
                value:
                  rtmp:
                    disable_audio: true
                    url: 'rtmp://192.168.86.51'
                    stream: updated
                    username: test
                    password: password
                  type: rtmp
                  common:
                    enabled: true
                    single_touch: true
              'RTSP announce':
                value:
                  rtsp:
                    disable_audio: true
                    url: 'rtsp://192.168.86.102'
                    transport: tcp
                    username: user
                    password: password
                  type: rtsp
                  common:
                    enabled: true
                    single_touch: true
              'MPEG-TS UDP push':
                value:
                  mpegts_udp:
                    port: 6006
                    address: ''
                    sap: false
                    sap_ip: ''
                    sap_channel: 0
                    sap_play_group: ''
                    limit_bandwidth: true
                    limit_bandwidth_rate: 1024
                  type: mpegts-udp
                  common:
                    enabled: true
                    single_touch: true
              'MPEG-TS RTP/UDP push':
                value:
                  mpegts_rtp:
                    port: 6008
                    address: ''
                    sap: false
                    sap_ip: ''
                    sap_channel: 0
                    sap_play_group: ''
                    limit_bandwidth: true
                    limit_bandwidth_rate: 1024
                  type: mpegts-rtp
                  common:
                    enabled: true
                    single_touch: true
              'RTP/UDP push':
                value:
                  rtp_udp:
                    audio_port: 6002
                    video_port: 6004
                    address: ''
                    sap: false
                    sap_ip: ''
                    sap_channel: 0
                    sap_play_group: ''
                    limit_bandwidth: true
                    limit_bandwidth_rate: 1024
                  type: rtp-udp
                  common:
                    enabled: true
                    single_touch: true
              'SRT push (Caller)':
                value:
                  srt:
                    url: 'srt://127.0.0.1:19863'
                    stream_id: streamid
                    disable_audio: true
                    mode: caller
                    latency: 150
                    bw_recovery_overhead: 27
                    encryption:
                      keylength: 256
                      passphrase: AnyPassphrase1
                  type: srt
                  common:
                    enabled: true
                    single_touch: true
              'SRT push (Listener)':
                value:
                  srt:
                    port: 19862
                    disable_audio: true
                    mode: listener
                    latency: 150
                    bw_recovery_overhead: 26
                    encryption:
                      keylength: 256
                      passphrase: AnyPassphrase1
                  type: srt
                  common:
                    enabled: true
                    single_touch: false
              'SRT push (Rendezvous)':
                value:
                  srt:
                    url: 'srt://192.168.86.51:19863'
                    disable_audio: true
                    mode: rendezvous
                    latency: 150
                    bw_recovery_overhead: 29
                    encryption:
                      keylength: 256
                      passphrase: PASSPHRASE
                  type: srt
                  common:
                    enabled: true
                    single_touch: false
              'HLS push':
                value:
                  hls:
                    disable_audio: true
                    url: 'http://192.168.86.51'
                    master_pl_url: 'http://192.168.86.52'
                    username: test
                    password: password
                    segment_duration: 7
                    list_size: 7
                    user_agent: AGENT
                    http_method: POST
                    media_seg_tmpl: ''
                  type: hls
                  common:
                    enabled: true
                    single_touch: true
              NDI®:
                value:
                  ndi:
                    disable_audio: false
                    ndi_name: 'MD Pearl'
                    ndi_group: 'MD Group'
                  type: ndi
                  common:
                    enabled: true
                    single_touch: true
        required: true
      responses:
        '200':
          description: 'Completely updated settings for the publisher'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/PublisherSettings'
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
    patch:
      tags:
        - Publishers
      summary: 'Partially update settings for the publisher'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/publisherId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherSettings'
            examples:
              'RTMP push':
                value:
                  rtmp:
                    url: 'rtmp://192.168.86.57'
                    stream: 'PATCHED STREAM'
                  common:
                    enabled: false
              'RTSP announce':
                value:
                  rtsp:
                    url: 'rtsp://192.168.86.57'
                    transport: udp
                  common:
                    enabled: false
              'MPEG-TS UDP push':
                value:
                  mpegts_udp:
                    port: 60100
                    limit_bandwidth: false
                  common:
                    enabled: false
              'MPEG-TS RTP/UDP push':
                value:
                  mpegts_rtp:
                    port: 6010
                    limit_bandwidth: false
                  common:
                    enabled: false
              'RTP/UDP push':
                value:
                  rtp_udp:
                    audio_port: 6010
                    video_port: 6012
                    limit_bandwidth: false
                  common:
                    enabled: false
              'SRT push (Caller)':
                value:
                  srt:
                    url: 'srt://127.0.0.1:19869'
                    encryption:
                      passphrase: AnyPassphrase2
                  common:
                    enabled: false
              'SRT push (Listener)':
                value:
                  srt:
                    port: 19869
                    encryption:
                      passphrase: AnyPassphrase2
                  common:
                    enabled: false
              'SRT push (Rendezvous)':
                value:
                  srt:
                    url: 'srt://192.168.86.51:19869'
                    encryption: null
                  common:
                    enabled: false
              'HLS push':
                value:
                  hls:
                    disable_audio: false
                    url: 'https://192.168.86.59'
                  common:
                    enabled: false
              NDI®:
                value:
                  ndi:
                    ndi_name: 'MD NDI'
                  common:
                    enabled: false
        required: true
      responses:
        '200':
          description: 'Partially updated settings for the publisher'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/PublisherSettings'
              examples:
                'First channel':
                  value:
                    status: ok
                    result:
                      started: false
                      single-touch: false
                      disable-audio: false
                      url: 'rtsp://192.168.114.59/live/'
                      transport: udp
                      username: ''
                      password: ''
        '404':
          $ref: '#/components/responses/channelOrPublisherNotFound'
  /channels:
    get:
      tags:
        - Channels
      summary: 'Returns a list of available channels with their properties.'
      parameters:
        -
          $ref: '#/components/parameters/commaSeparatedChannelIds'
        -
          $ref: '#/components/parameters/includePublishers'
        -
          $ref: '#/components/parameters/includePublishersStatus'
        -
          $ref: '#/components/parameters/includePublishersSettings'
        -
          $ref: '#/components/parameters/includeEncoders'
        -
          $ref: '#/components/parameters/includeActiveLayout'
      responses:
        '200':
          description: 'A list of channel objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Channel'
              example:
                status: ok
                result:
                  -
                    id: '1'
                    name: 'HDMI-A Updated2'
                    publishers:
                      -
                        id: '0'
                        type: rtmp
                        name: 'Stream 1'
                        status:
                          is_configured: true
                          started: false
                          state: stopped
                        settings:
                          type: rtmp
                          started: false
                          single-touch: true
                          disable-audio: false
                          url: 'rtmp://192.168.114.57/live/'
                          stream: agamoskin
                          username: ''
                          password: ''
                          auto_created: false
                          name: 'Stream 1'
                      -
                        id: '1'
                        type: rtsp
                        name: 'Stream1 Updated'
                        status:
                          is_configured: true
                          started: false
                          state: stopped
                        settings:
                          type: rtsp
                          started: false
                          single-touch: false
                          disable-audio: true
                          url: 'rtsp://192.168.114.59/live/'
                          transport: udp
                          username: ''
                          password: ''
                          name: 'Stream1 Updated'
                      -
                        id: '2'
                        type: srt
                        name: 'Stream 3'
                        status:
                          is_configured: true
                          started: true
                          state: started
                          duration: 17481
                          since: 1734612472
                          statistics:
                            total:
                              duration: 17474
                              pkt_sent: 6090501
                              pkt_loss: 0
                              pkt_retrans: 0
                              pkt_drop: 0
                              latency: 125
                              byte_sent: 7759992228
                              byte_retrans: 0
                              byte_drop: 0
                            current:
                              duration: 20
                              send_rate: 3.559
                              loss_ratio: 0
                              retrans_ratio: 0
                              drop_ratio: 0
                              latency: 125
                              rtt: 1131
                              estimated_bandwidth: 324.636
                              send_buffer: 1000
                              stream_id: ''
                              ip: 192.168.86.102
                          reconnections: 0
                        settings:
                          type: srt
                          started: true
                          single-touch: true
                          disable-audio: false
                          url: ''
                          key-length: '0'
                          passphrase: '1111111111'
                          latency: 125
                          bw-recovery-overhead: 25
                          stream-id: ''
                          mode: listener
                          source-port: 0
                          port: 1026
                          encryption: true
                          name: 'Stream 3'
                    encoders:
                      -
                        id: '0'
                        type: video
                        name: H.264
                        resolution: 1920x1080
                        framerate: 30
                        bitrate: 3000
                      -
                        id: '1'
                        type: audio
                        name: AAC
                        channels: 2
                        bitrate: 128
                    active_layout:
                      id: '1'
                      name: Default
                      sources:
                        video:
                          -
                            id: D2P0.hdmi-a
                            name: HDMI-A
                        audio:
                          -
                            id: D2P0.hdmi-a-audio
                            name: 'HDMI-A Audio'
  '/channels/{cid}/preview':
    get:
      tags:
        - Channels
      summary: 'Get channel preview image'
      description: 'Returns a preview image of the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          name: resolution
          in: query
          description: "The resolution of the preview image to return.\nPossible values: `widthxheight` (ex `1920x1080`), `width` (ex `1920`), `auto`\n\nWhen only a width is provided, the image is scaled to the given width, preserving its original aspect ratio.\n"
          schema:
            type: string
            default: auto
        -
          name: keep_aspect_ratio
          in: query
          description: 'Whether to keep the aspect ratio for the preview image to return.'
          schema:
            type: boolean
            default: true
        -
          name: format
          in: query
          description: "The format of the preview image to return.\nPossible Values: `jpg`, `png`\nRecommended: `jpg`\n"
          schema:
            enum:
              - jpg
              - png
            type: string
            default: jpg
      responses:
        '200':
          description: 'Preview image retrieved successfully'
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/name':
    get:
      tags:
        - Channels
      summary: 'Get channel name'
      description: 'Returns the display name of the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
      responses:
        '200':
          description: 'Channel name retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    maxLength: 128
                    minLength: 1
                    type: string
              example:
                status: ok
                result: HDMI-A
        '404':
          $ref: '#/components/responses/channelNotFound'
    put:
      tags:
        - Channels
      summary: 'Update channel name'
      description: 'Updates the display name of the specified channel'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          name: name
          in: query
          required: true
          schema:
            maxLength: 128
            minLength: 1
            type: string
            description: 'New channel name'
          examples:
            'First channel':
              value: 'HDMI-A Updated'
      responses:
        '200':
          description: 'Channel name updated successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: string
              example:
                status: ok
                result: 'HDMI-A Updated'
        '404':
          $ref: '#/components/responses/channelNotFound'
  '/channels/{cid}/bookmarks':
    post:
      tags:
        - Channels
      summary: "Add a bookmark to an archive file when the channel is recording.\nThis operation is supported only for recordings in MP4 or MOV format.\n"
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          name: text
          in: query
          description: 'Bookmark name.'
          required: true
          schema:
            type: string
          example: 'New bookmark'
      responses:
        '200':
          description: 'A command to add bookmark is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/channelNotFound'
        '400':
          description: 'Missing or invalid parameters or channel is recorded in a format that does not support bookmarks.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 'The channel is not being recorded.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal error happened while making a bookmark.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/channels/{cid}/layouts/active':
    put:
      tags:
        - Channels
      summary: 'Activate the specified layout in the channel.'
      parameters:
        -
          $ref: '#/components/parameters/channelId'
        -
          $ref: '#/components/parameters/layoutId'
      responses:
        '200':
          description: 'Successful activation of the specified layout'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '404':
          $ref: '#/components/responses/channelNotFound'
  /inputs:
    get:
      tags:
        - Inputs
      summary: 'Returns a list of available inputs, their Input IDs {sid}, and their properties.'
      operationId: getInputs
      parameters:
        -
          $ref: '#/components/parameters/commaSeparatedInputTypes'
        -
          $ref: '#/components/parameters/inputsIds'
      responses:
        '200':
          description: 'A list of input objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Input'
              example:
                status: ok
                result:
                  -
                    id: D2P496187.hdmi-a
                    name: HDMI-A
                    audio: false
                    video: true
                    type: embedded
                  -
                    id: USBA
                    name: USB-A
                    audio: true
                    video: true
                    type: usb
                  -
                    id: RTSP1
                    name: 'RTSP 1'
                    audio: true
                    video: true
                    type: rtsp
    post:
      tags:
        - Inputs
      summary: 'Create a new network input.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/NetworkInputType'
                name:
                  maxLength: 128
                  minLength: 1
                  type: string
                settings:
                  $ref: '#/components/schemas/NetworkInputSettings'
            examples:
              'RTSP with UDP transport':
                value:
                  type: rtsp
                  name: 'New RTSP'
                  settings:
                    audio:
                      delay: 0
                    video:
                      nosignal:
                        image: ''
                        timeout: 5
                      force_full_color_range: true
                      hwaccel_decoding: true
                    rtsp:
                      url: 'rtsp://10.10.10.10:8554/rtspstream'
                      username: ''
                      password: ''
                      transport: udp
              NDI:
                value:
                  type: ndi
                  name: 'New NDI'
                  settings:
                    audio:
                      delay: 0
                    video:
                      nosignal:
                        image: ''
                        timeout: 5
                      force_full_color_range: true
                      hwaccel_decoding: true
                    ndi:
                      group: ''
                      name: NDI_SOURCE
                      extra_source_ip_addresses: ''
                      ignore_timecode: false
              'Web Graphics':
                value:
                  type: web-graphics
                  name: 'New Web Graphics'
                  settings:
                    video:
                      nosignal:
                        image: ''
                        timeout: 5
                    web_graphics:
                      url: 'https://example.com'
                      resolution: 1920x1080
                      fps: 10
              'SRT Listener':
                value:
                  type: srt
                  name: 'New SRT Listener'
                  settings:
                    audio:
                      delay: 0
                    video:
                      nosignal:
                        image: ''
                        timeout: 8
                      force_full_color_range: true
                      hwaccel_decoding: true
                    srt:
                      mode: listener
                      latency: 83
                      encryption:
                        passphrase: AAAAAAAAAAAAAAAAAA
                        keylength: 256
                      port: 1029
              'SRT Caller':
                value:
                  type: srt
                  name: 'New SRT Caller'
                  settings:
                    audio:
                      delay: 0
                    video:
                      nosignal:
                        image: ''
                        timeout: 5
                      force_full_color_range: true
                      hwaccel_decoding: true
                    srt:
                      mode: caller
                      latency: 80
                      encryption: null
                      url: 'srt://10.2.4.6:1025'
                      stream_id: ''
                      source_port: 0
              'SRT Rendezvous':
                value:
                  type: srt
                  name: 'New SRT Rendezvous'
                  settings:
                    audio:
                      delay: 0
                    video:
                      nosignal:
                        image: ''
                        timeout: 5
                      force_full_color_range: true
                      hwaccel_decoding: true
                    srt:
                      mode: rendezvous
                      latency: 80
                      encryption: null
                      url: 'srt://10.2.4.6:1088'
        required: true
      responses:
        '201':
          description: 'An identifier of a new input'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: string
              examples:
                'SRT Listener':
                  value:
                    status: ok
                    result: SRT1
                'SRT Caller':
                  value:
                    status: ok
                    result: SRT2
                'SRT Rendezvous':
                  value:
                    status: ok
                    result: SRT3
        '400':
          description: 'Invalid or missing request parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: badrequest
                message: 'Missing input type'
        '405':
          description: 'Input type is not allowed to be created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: notallowed
                message: 'Input type is not allowed'
        '409':
          description: 'Maximum number of inputs is reached'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: conflict
                message: 'The maximum number of allowed network inputs is reached'
        '500':
          description: 'Input cannot be created due to unknown error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: internalservererror
                message: 'Failed to create RTSP input'
  '/inputs/{sid}/preview':
    get:
      tags:
        - Inputs
      summary: 'Get input preview image'
      description: 'Returns a preview image of the specified input'
      parameters:
        -
          $ref: '#/components/parameters/inputId'
        -
          name: resolution
          in: query
          description: "The resolution of the preview image to return.\nPossible values: `widthxheight` (ex `1920x1080`), `width` (ex `1920`), `auto`\n\nWhen only a width is provided, the image is scaled to the given width, preserving its original aspect ratio.\n"
          schema:
            type: string
            default: auto
        -
          name: keep_aspect_ratio
          in: query
          description: 'Whether to keep the aspect ratio for the preview image to return.'
          schema:
            type: boolean
            default: true
        -
          name: format
          in: query
          description: "The format of the preview image to return.\nPossible Values: `jpg`, `png`\nRecommended: `jpg`\n"
          schema:
            enum:
              - jpg
              - png
            type: string
            default: jpg
      responses:
        '200':
          description: 'Preview image retrieved successfully'
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/inputNotFound'
  '/inputs/{sid}/settings':
    get:
      tags:
        - Inputs
      summary: 'Get settings for the input'
      parameters:
        -
          $ref: '#/components/parameters/inputId'
      responses:
        '200':
          description: 'Settings information for the input'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/InputSettings'
              examples:
                'SRT Listener':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: listener
                        latency: 80
                        encryption:
                          passphrase: '111111111111111'
                          keylength: 128
                        port: 1024
                'SRT Caller':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: caller
                        latency: 80
                        encryption: null
                        url: 'srt://10.2.4.6:1025'
                        stream_id: ''
                        source_port: 0
                'SRT Rendezvous':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: rendezvous
                        latency: 80
                        encryption: null
                        url: 'srt://10.2.4.6:1088'
                'Pearl Mini/Nexus XLR/TRS':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      local_audio:
                        gain: 27
                        mute: false
                        phantom_power: false
                        stereo_pair: true
                        channels:
                          channelA:
                            gain: 27
                            mute: false
                          channelB:
                            gain: 27
                            mute: false
                'Pearl Mini/Nexus RCA/3.5mm':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      local_audio:
                        gain: 6
                        mute: false
                        input_type: RCA+3.5mm
        '404':
          $ref: '#/components/responses/inputNotFound'
        '405':
          description: 'Input settings are not supported'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NDI:
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                USB:
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Web Graphics':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl Nano HDMI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl 2/Mini/Nexus HDMI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl Nano/Mini/Nexus SDI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'HDMI 4K':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'SDI 4K':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
    put:
      tags:
        - Inputs
      summary: 'Completely update settings for the input'
      parameters:
        -
          $ref: '#/components/parameters/inputId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSettings'
            examples:
              'SRT Listener':
                value:
                  audio:
                    delay: 1
                  video:
                    nosignal:
                      image: ''
                      timeout: 5
                    force_full_color_range: true
                    hwaccel_decoding: true
                  srt:
                    mode: listener
                    latency: 84
                    encryption:
                      passphrase: '2222222222'
                      keylength: 256
                    port: 1027
              'SRT Caller':
                value:
                  audio:
                    delay: 1
                  video:
                    nosignal:
                      image: ''
                      timeout: 7
                    force_full_color_range: true
                    hwaccel_decoding: true
                  srt:
                    mode: caller
                    latency: 88
                    encryption: null
                    url: 'srt://10.2.4.6:1027'
                    stream_id: PUT
                    source_port: 0
              'SRT Rendezvous':
                value:
                  audio:
                    delay: 2
                  video:
                    nosignal:
                      image: ''
                      timeout: 6
                    force_full_color_range: false
                    hwaccel_decoding: true
                  srt:
                    mode: rendezvous
                    latency: 86
                    encryption: null
                    url: 'srt://10.2.4.6:10900'
              'Pearl 2 Analog A Audio':
                value:
                  audio:
                    delay: 0
                  local_audio:
                    gain: 0
                    mute: false
                    stereo_pair: true
                    channels:
                      channelA:
                        gain: 0
                        mute: false
                      channelB:
                        gain: 0
                        mute: false
              'Pearl 2 Analog B Audio':
                value:
                  audio:
                    delay: 0
                  local_audio:
                    gain: 0
                    mute: false
                    input_type: XLR+RCA
                    stereo_pair: true
                    channels:
                      channelA:
                        gain: 0
                        mute: false
                      channelB:
                        gain: 0
                        mute: false
              'Pearl Mini/Nexus XLR/TRS Audio':
                value:
                  audio:
                    delay: 0
                  local_audio:
                    gain: 27
                    mute: false
                    phantom_power: false
                    stereo_pair: true
                    channels:
                      channelA:
                        gain: 27
                        mute: false
                      channelB:
                        gain: 27
                        mute: false
              'Pearl Mini/Nexus RCA/3.5mm Audio':
                value:
                  audio:
                    delay: 0
                  local_audio:
                    gain: 6
                    mute: false
                    input_type: RCA+3.5mm
              'Pearl Nano XLR/RCA Audio':
                value:
                  audio:
                    delay: 0
                  local_audio:
                    gain: 0
                    mute: false
                    input_type: XLR+RCA
                    stereo_pair: true
                    channels:
                      channelA:
                        gain: 0
                        mute: false
                      channelB:
                        gain: 0
                        mute: false
              'Pearl 2 HDMI4K-A':
                value:
                  video:
                    nosignal:
                      image: ''
                      timeout: 5
                  hdmi:
                    deinterlacing: false
                    downscale_4k_to_fullhd: true
                    audio:
                      mute: false
                      delay: 0
              'Pearl Mini HDMI':
                value:
                  video:
                    nosignal:
                      image: ''
                      timeout: 5
                  hdmi:
                    deinterlacing: false
                    audio:
                      mute: false
                      delay: 0
              'Pearl Nano SDI':
                value:
                  video:
                    nosignal:
                      image: ''
                      timeout: 5
                  sdi:
                    scaling: 2560x1440
                    audio:
                      mute: true
                      delay: 25
        required: true
      responses:
        '200':
          description: 'Completely updated settings for the input'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/InputSettings'
        '404':
          $ref: '#/components/responses/inputNotFound'
        '405':
          description: 'Input settings are not supported'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: notallowed
                message: 'Input settings are not supported'
    patch:
      tags:
        - Inputs
      summary: 'Partially update settings for the input'
      parameters:
        -
          $ref: '#/components/parameters/inputId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSettings'
            examples:
              'SRT Listener':
                value:
                  audio:
                    delay: 5
                  srt:
                    mode: listener
                    latency: 82
                    encryption:
                      passphrase: '111111111111111'
                      keylength: 128
                    port: 1025
              'SRT Caller':
                value:
                  video:
                    nosignal:
                      image: ''
                  srt:
                    mode: caller
                    stream_id: TEST
              'SRT Rendezvous':
                value:
                  audio:
                    delay: 7
                  video:
                    nosignal:
                      timeout: 3
                    force_full_color_range: false
                    hwaccel_decoding: true
                  srt:
                    mode: rendezvous
                    latency: 85
                    url: 'srt://10.2.4.6:1089'
              'Pearl Mini/Nexus XLR/TRS':
                value:
                  audio:
                    delay: 1
                  local_audio:
                    stereo_pair: false
                    channels:
                      channelA:
                        gain: 40
                        mute: true
                      channelB:
                        gain: 41
                        mute: false
              'Pearl Mini/Nexus RCA/3.5mm':
                value:
                  audio:
                    delay: 5
                  local_audio:
                    gain: 8
                    mute: true
        required: true
      responses:
        '200':
          description: 'Partially updated settings for the input'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/InputSettings'
              examples:
                'SRT Listener':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: listener
                        latency: 80
                        encryption:
                          passphrase: '111111111111111'
                          keylength: 128
                        port: 1024
                'SRT Caller':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: caller
                        latency: 80
                        encryption: null
                        url: 'srt://10.2.4.6:1025'
                        stream_id: ''
                        source_port: 0
                'SRT Rendezvous':
                  value:
                    status: ok
                    result:
                      audio:
                        delay: 0
                      video:
                        nosignal:
                          image: ''
                          timeout: 5
                        force_full_color_range: true
                        hwaccel_decoding: true
                      srt:
                        mode: rendezvous
                        latency: 80
                        encryption: null
                        url: 'srt://10.2.4.6:1088'
                'Pearl Mini/Nexus XLR/TRS':
                  value:
                    status: ok
                    result:
                      audio:
                        gain: 27
                        mute: false
                        phantom_power: false
                        delay: 0
                'Pearl Mini/Nexus RCA/3.5mm':
                  value:
                    status: ok
                    result:
                      audio:
                        gain: 6
                        mute: false
                        delay: 0
        '404':
          $ref: '#/components/responses/inputNotFound'
        '405':
          description: 'Input settings are not supported'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                NDI:
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                RTSP:
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                USB:
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Web Graphics':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl Nano HDMI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl 2/Mini/Nexus HDMI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'Pearl Nano/Mini/Nexus SDI':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'HDMI 4K':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
                'SDI 4K':
                  value:
                    status: notallowed
                    message: 'Input settings are not supported'
  /outputs:
    get:
      tags:
        - Outputs
      summary: 'Returns a list of available outputs, their Output IDs {did}, and their properties.'
      parameters:
        -
          $ref: '#/components/parameters/commaSeparatedOutputIds'
      responses:
        '200':
          description: 'A list of output objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Output'
              example:
                status: ok
                result:
                  -
                    id: D1
                    name: HDMI
  '/outputs/{did}/preview':
    get:
      tags:
        - Outputs
      summary: 'Get output preview image'
      description: 'Returns a preview image of the specified output'
      parameters:
        -
          $ref: '#/components/parameters/outputId'
        -
          name: resolution
          in: query
          schema:
            type: string
            default: 1920x1080
        -
          name: format
          in: query
          schema:
            enum:
              - jpg
              - png
            type: string
            default: jpg
      responses:
        '200':
          description: 'Preview image retrieved successfully'
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/outputNotFound'
  '/outputs/{did}/settings':
    put:
      tags:
        - Outputs
      summary: 'Change a source of the output'
      parameters:
        -
          $ref: '#/components/parameters/outputId'
        -
          $ref: '#/components/parameters/outputSource'
      responses:
        '200':
          description: 'Output source changed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/outputNotFound'
  /recorders:
    get:
      tags:
        - Recorders
      summary: 'Returns list of available recorders with their properties.'
      description: "Returns a list of all recorders {rid} and their properties.\nA Recorder can be either a built-in Channel Recorder or a user-created Multitrack Recorder.\n"
      parameters:
        -
          $ref: '#/components/parameters/recordersIds'
      responses:
        '200':
          description: 'A list of recorder objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recorder'
              example:
                status: ok
                result:
                  -
                    id: '1'
                    name: HDMI-A
                    multisource: false
                  -
                    id: '2'
                    name: HDMI-B
                    multisource: false
                  -
                    id: '3'
                    name: USB-B
                    multisource: false
                  -
                    id: '4'
                    name: USB-B
                    multisource: false
                  -
                    id: '5'
                    name: USB-A
                    multisource: false
  /recorders/status:
    get:
      tags:
        - Recorders
      summary: 'Returns status information for all existing recorders.'
      parameters:
        -
          $ref: '#/components/parameters/recordersIds'
      responses:
        '200':
          description: 'A list of recorder objects and their status'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/IdentifiedRecorderStatus'
              examples:
                'All recorders':
                  value:
                    status: ok
                    result:
                      -
                        id: '1'
                        name: HDMI-A
                        status:
                          state: started
                          duration: 58
                          active: '1'
                          total: '1'
                      -
                        id: '2'
                        name: HDMI-B
                        status:
                          state: stopped
                      -
                        id: '3'
                        name: USB-B
                        status:
                          state: stopped
                      -
                        id: '4'
                        name: USB-B
                        status:
                          state: stopped
                      -
                        id: '5'
                        name: USB-A
                        status:
                          state: stopped
  /recorders/control/start:
    post:
      tags:
        - Recorders
      summary: 'Starts all recorders filtered by parameters.'
      description: 'The method does not wait for recorders to start. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/recordersIds'
      responses:
        '200':
          description: 'Start command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
  /recorders/control/stop:
    post:
      tags:
        - Recorders
      summary: 'Stops all recorders filtered by parameters.'
      description: 'The method does not wait for recorders to stop. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/recordersIds'
      responses:
        '200':
          description: 'Stop command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
  '/recorders/{rid}/control/start':
    post:
      tags:
        - Recorders
      summary: 'Starts the specified recorder'
      description: 'The method does not wait for the recorder to start. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/recorderId'
      responses:
        '200':
          description: 'Start command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/recorderNotFound'
  '/recorders/{rid}/control/stop':
    post:
      tags:
        - Recorders
      summary: 'Stops the specified recorder'
      description: 'The method does not wait for the recorder to stop. The operation executes asynchronously.'
      parameters:
        -
          $ref: '#/components/parameters/recorderId'
      responses:
        '200':
          description: 'Stop command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/recorderNotFound'
  '/recorders/{rid}/status':
    get:
      tags:
        - Recorders
      summary: 'Get recorder status'
      description: 'Returns the status of the specified recorder'
      parameters:
        -
          $ref: '#/components/parameters/recorderId'
      responses:
        '200':
          description: 'Recorder status retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/RecorderStatus'
              examples:
                'First recorder':
                  value:
                    status: ok
                    result:
                      state: started
                      duration: 195
                      active: '1'
                      total: '1'
                'Second recorder':
                  value:
                    status: ok
                    result:
                      state: stopped
        '404':
          $ref: '#/components/responses/recorderNotFound'
  '/recorders/{rid}/archive/files':
    get:
      tags:
        - Recorders
      summary: 'Get recorder archive files'
      description: 'Returns a list of recorded files currently stored within the specified recorder.'
      parameters:
        -
          $ref: '#/components/parameters/recorderId'
        -
          $ref: '#/components/parameters/fromIndex'
        -
          $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'A list of the specified recorder archive files retrieved successfully'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ArchiveFile'
              examples:
                'First recorder':
                  value:
                    status: ok
                    result:
                      -
                        id: VGA.1733956350.HDMI-A.mp4
                        name: HDMI-A_Dec11_17-32-30
                        extension: mp4
                        recording: false
                        downloaded: false
                        created: '2024-12-11T17:32:30-0500'
                        duration: 1040
                        size: 407160404
                        recorder: '1'
                        uploading: false
                        event_id: ''
                      -
                        id: VGA.1733871268.HDMI-A.mp4
                        name: HDMI-A_Dec10_17-54-28
                        extension: mp4
                        recording: false
                        downloaded: false
                        created: '2024-12-10T17:54:28-0500'
                        duration: 309
                        size: 120487978
                        recorder: '1'
                        uploading: false
                        event_id: 4f5d44e94be94dd8ba850feb78718893
        '404':
          $ref: '#/components/responses/recorderNotFound'
  '/recorders/{rid}/archive/files/{fid}':
    get:
      tags:
        - Recorders
      summary: 'Download recorded file'
      description: 'Downloads a file with specified ID from given recorder'
      parameters:
        -
          $ref: '#/components/parameters/recorderId'
        -
          $ref: '#/components/parameters/fileId'
      responses:
        '200':
          description: 'File downloaded successfully'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/recorderOrFileNotFound'
  /schedule/events:
    summary: ''
    get:
      tags:
        - Events
      summary: 'Get a list of events'
      description: 'Basic information for all events (upcoming, ongoing, paused and completed)'
      parameters:
        -
          name: from
          in: query
          description: 'Earliest scheduled start time'
          schema:
            type: string
            format: date-time
        -
          name: to
          in: query
          description: 'Latest scheduled finish time'
          schema:
            type: string
            format: date-time
        -
          name: limit
          in: query
          description: 'The maximum number of returned events'
          schema:
            type: integer
        -
          name: status
          in: query
          description: 'Limit output to the events with given status'
          schema:
            $ref: '#/components/schemas/EventStatus'
        -
          name: extstatus
          in: query
          description: 'Include extended status information'
          schema:
            type: boolean
        -
          name: full
          in: query
          description: 'If `true`, include all available event fields. Otherwise return a subset of fields.'
          schema:
            type: boolean
        -
          name: cmsinfo
          in: query
          description: 'If `true`, include an array of CMS capability descriptors called `capabilities` in `extra_data` field.'
          schema:
            type: boolean
      responses:
        '200':
          description: 'A list of events that match the provided criteria. The response may be paginated, and the `limit` parameter controls the number of results returned per page. If no events are found, an empty list is returned.'
          content:
            application/json:
              schema:
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
    post:
      tags:
        - Events
      summary: 'Create a new ad-hoc event'
      description: "Creates a new ad-hoc event for the currently configured CMS.\nOnly Kaltura CMS, Panopto CMS and Opencast CMS are supported.\n\n* in case of Kaltura CMS an event is automatically added into a local\nscheduling database and an internal event identifier is returned immediately.\nAn event is not created on the Kaltura server side.\n\n* in case of Panopto CMS and Opencast CMS an event is created on the CMS server side and\nschedule synchronization (refresh) is required in order to get a newly\ncreated ad-hoc event into the local scheduling database\n\nIf the configuration option `Automatically logout` is `on` then\nan active ad-hoc login session is automatically deleted upon successful ad-hoc event creation."
      requestBody:
        description: 'Ad-hoc event description'
        content:
          application/json:
            schema:
              oneOf:
                -
                  $ref: '#/components/schemas/AdhocEventKaltura'
                -
                  $ref: '#/components/schemas/AdhocEventPanopto'
                -
                  $ref: '#/components/schemas/AdhocEventOpencast'
        required: true
      responses:
        '400':
          $ref: '#/components/responses/error'
        '409':
          $ref: '#/components/responses/error'
        '201':
          description: 'A created ad-hoc event details.'
          content:
            application/json:
              schema:
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/Event'
  '/schedule/events/{eventId}':
    get:
      tags:
        - Events
      summary: 'Get basic information for an event'
      parameters:
        -
          $ref: '#/components/parameters/eventId'
        -
          name: cmsinfo
          in: query
          description: 'If `true`, include an array of CMS capability descriptors called `capabilities` in `extra_data` field.'
          schema:
            type: boolean
      responses:
        '200':
          description: 'A specified event.'
          content:
            application/json:
              schema:
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/Event'
        '404':
          $ref: '#/components/responses/404'
  '/schedule/events/{eventId}/control/start':
    post:
      tags:
        - Events
      summary: 'Force start an upcoming event ahead of scheduled start time'
      description: 'Only an event with status `scheduled` can be started'
      parameters:
        -
          $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
  '/schedule/events/{eventId}/control/stop':
    post:
      tags:
        - Events
      summary: 'Force stop an ongoing or paused event ahead of scheduled finish time'
      description: 'Only an event with status `running` or `paused` can be stopped'
      parameters:
        -
          $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
  '/schedule/events/{eventId}/control/pause':
    post:
      tags:
        - Events
      summary: 'Pause an ongoing event'
      description: 'Only an event with status `running` can be paused'
      parameters:
        -
          $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
  '/schedule/events/{eventId}/control/resume':
    post:
      tags:
        - Events
      summary: 'Resume a paused event'
      description: 'Only an event with status `paused` can be resumed'
      parameters:
        -
          $ref: '#/components/parameters/eventId'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
  '/schedule/events/{eventId}/control/extend':
    post:
      tags:
        - Events
      summary: 'Extend an ongoing or paused event'
      description: "Only an event in status `running` or `paused` can be extended.\nIf an extended event overlaps with the next scheduled event an error is returned."
      parameters:
        -
          $ref: '#/components/parameters/eventId'
      requestBody:
        description: 'Extend event parameters'
        content:
          application/json:
            schema:
              required:
                - finish
              type: object
              properties:
                finish:
                  type: integer
                  description: 'Amount of seconds to be added to the current finish time'
              example:
                finish: 300
            example:
              finish: 300
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
  /schedule/events/adhoc/session:
    summary: 'Short-living session with the credentials for ad-hoc events'
    description: "Short-living (1 hour) session to keep login credentials to created ad-hoc\nevents. Only Kaltura CMS and Panopto CMS are supported."
    get:
      tags:
        - Events
      summary: 'Get current ad-hoc login session'
      responses:
        '200':
          description: 'Current ad-hoc login session'
          content:
            application/json:
              schema:
                oneOf:
                  -
                    $ref: '#/components/schemas/AdhocSessionKaltura'
                  -
                    $ref: '#/components/schemas/AdhocSessionPanopto'
    post:
      tags:
        - Events
      summary: 'Start a new ad-hoc session (login)'
      description: "* Kaltura CMS: for given user id or email address retrieve an actual user id\nand full name. Later on the stored user id can be used to create new ad-hoc events.\n* Panopto CMS: User credentials will be used to get OAuth2 access token which is required \nin order to create new ad-hoc events on behalf of an authenticated user.\nFor more information see <https://support.panopto.com/s/article/oauth2-for-services>"
      requestBody:
        description: 'CMS login credentials'
        content:
          application/json:
            schema:
              oneOf:
                -
                  required:
                    - id
                  type: object
                  properties:
                    id:
                      type: string
                  description: 'Kaltura CMS credentials'
                -
                  required:
                    - id
                    - password
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Login for Panopto account'
                    password:
                      type: string
                      description: 'Password for Panopto account'
                  description: 'Panopto CMS credentials'
            examples:
              Kaltura:
                value:
                  id: JohnDoe
              Panopto:
                value:
                  id: JohnDoe
                  password: JohnDoePassword
        required: true
      responses:
        '200':
          description: 'Current ad-hoc login'
          content:
            application/json:
              schema:
                oneOf:
                  -
                    $ref: '#/components/schemas/AdhocSessionKaltura'
                  -
                    $ref: '#/components/schemas/AdhocSessionPanopto'
    delete:
      tags:
        - Events
      summary: 'Delete an ad-hoc session (logout)'
      responses:
        '200':
          $ref: '#/components/responses/ok'
  /system/status:
    get:
      tags:
        - 'System status'
      summary: 'Gets system status'
      responses:
        '200':
          description: 'Information about system''s condition'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/SystemStatus'
              example:
                status: ok
                result:
                  date: '2025-02-14T08:41:09-05:00'
                  uptime: 5490
                  cpuload: 25
                  cpuload_high: false
                  cputemp: 57
                  cputemp_threshold: 70
  /system/connectivity/tools/speedtest:
    get:
      tags:
        - Network
      summary: 'Execute a speed test for a specified protocol (UDP/TCP)'
      parameters:
        -
          name: mode
          in: query
          description: 'Whether to measure a speed of uplink or downlink'
          schema:
            enum:
              - uplink
              - downlink
            type: string
            default: uplink
        -
          name: protocol
          in: query
          description: 'Whether to measure a speed of UDP or TCP protocol'
          schema:
            enum:
              - udp
              - tcp
            type: string
            default: tcp
        -
          name: timeout
          in: query
          description: 'A maximum time in seconds for a speed test'
          schema:
            minimum: 1
            type: integer
            default: 30
      responses:
        '200':
          description: 'Speed test report'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: object
                    properties:
                      protocol:
                        enum:
                          - tcp
                          - udp
                        type: string
                      mode:
                        enum:
                          - uplink
                          - downlink
                        type: string
                      bandwidth:
                        minimum: 0
                        type: integer
                        description: 'Bandwidth in bits per second'
                      bitrate_limit:
                        minimum: 0
                        type: integer
                        description: 'Bitrate limit in bits per second'
                      duration:
                        minimum: 0
                        type: integer
                        description: 'Speed test duration in seconds'
                      udp:
                        type: object
                        properties:
                          loss:
                            minimum: 0
                            type: integer
              example:
                status: ok
                result:
                  protocol: tcp
                  mode: uplink
                  bandwidth: 91318568
                  bitrate_limit: 1000000000
                  duration: 10
        '404':
          $ref: '#/components/responses/404'
  /system/connectivity/details:
    get:
      tags:
        - Network
      summary: 'Get a status of a specified network interface'
      responses:
        '200':
          description: 'Connectivity status report'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: object
                    properties:
                      external_ip:
                        type: string
                        format: ipv4
                      mdns:
                        type: string
                      dns:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      http:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      https:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      captive_portal:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      icmp:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      epiphan_edge:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
                      vtun:
                        enum:
                          - disabled
                          - ok
                          - error
                        type: string
              example:
                status: ok
                result:
                  external_ip: 174.115.41.91
                  mdns: GSAA495529
                  dns: error
                  http: ok
                  https: ok
                  captive_portal: ok
                  icmp: error
                  epiphan_edge: ok
                  vtun: ok
        '404':
          $ref: '#/components/responses/404'
  /system/control/reboot:
    post:
      tags:
        - 'System control'
      summary: 'Reboots the device.'
      responses:
        '200':
          description: 'Reboot command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
  /system/control/shutdown:
    post:
      tags:
        - 'System control'
      summary: 'Shutdown the device.'
      responses:
        '200':
          description: 'Shutdown command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
  /system/control/factoryreset:
    post:
      tags:
        - 'System control'
      summary: 'Performs a device factory reset.'
      description: 'Deletes all data from device and resets configuration settings to factory defaults.'
      responses:
        '200':
          description: 'Factory reset command is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
  /system/firmware:
    get:
      tags:
        - Firmware
      summary: 'Returns the device firmware details.'
      responses:
        '200':
          description: 'The device firmware details.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/FirmwareDetails'
              example:
                status: ok
                result:
                  version: 4.24.1
                  revision: 250107_1e4514f
                  product_id: 44
                  product_name: 'Pearl Mini'
  /system/firmware/version:
    get:
      tags:
        - Firmware
      summary: 'Returns the device firmware version.'
      responses:
        '200':
          description: 'The device firmware version.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: string
              example:
                status: ok
                result: 4.24.1
  /system/firmware/revision:
    get:
      tags:
        - Firmware
      summary: 'Returns the device firmware revision.'
      responses:
        '200':
          description: 'The device firmware revision.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: string
              example:
                status: ok
                result: 250107_1e4514f
  /system/firmware/product_id:
    get:
      tags:
        - Firmware
      summary: 'Returns the device firmware product identifier.'
      responses:
        '200':
          description: 'The device firmware product identifier.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: integer
              example:
                status: ok
                result: 44
  /system/firmware/product_name:
    get:
      tags:
        - Firmware
      summary: 'Returns the device product name.'
      description: 'Product name specified on the Info page of the Pearl''s WebUI/Admin Panel'
      responses:
        '200':
          description: 'The device firmware product name.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: string
              example:
                status: ok
                result: 'Pearl Mini'
  /system/ident:
    get:
      tags:
        - 'Device identity'
      summary: 'Returns device name, location, and description.'
      responses:
        '200':
          description: 'The device identity details.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/DeviceIdentity'
              example:
                status: ok
                result:
                  name: ''
                  location: Home
                  description: 'Pearl Mini at Home'
  /system/singletouchcontrol:
    get:
      tags:
        - 'Single touch control'
      summary: 'Returns a list of available single touch objects.'
      responses:
        '200':
          description: 'A list of single touch control objects'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SingleTouchControl'
              example:
                status: ok
                result:
                  -
                    id: '0'
  '/system/singletouchcontrol/{stcid}/state':
    get:
      tags:
        - 'Single touch control'
      summary: 'Returns a state of the specified single touch control object.'
      parameters:
        -
          $ref: '#/components/parameters/singleTouchControlId'
      responses:
        '200':
          description: 'A state of the specified single touch control object'
          content:
            application/json:
              schema:
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/SingleTouchControlState'
              example:
                status: ok
                result:
                  pressed: false
                  status: true
                  recorders:
                    total: 5
                    active: 0
                    success: 5
                  publishers:
                    total: 4
                    active: 1
                    success: 4
        '404':
          $ref: '#/components/responses/singleTouchControlNotFound'
  '/system/singletouchcontrol/{stcid}/control/toggle':
    post:
      tags:
        - 'Single touch control'
      summary: 'Change a state of the specified single touch control object'
      parameters:
        -
          $ref: '#/components/parameters/singleTouchControlId'
      responses:
        '200':
          description: 'A command to change the state of the specified single touch control object is processed successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
              example:
                status: ok
        '404':
          $ref: '#/components/responses/singleTouchControlNotFound'
  /system/presets:
    get:
      tags:
        - Presets
      summary: 'Returns a list of device presets.'
      parameters:
        -
          name: sections
          in: query
          description: 'Whether to add sections to the response'
          schema:
            type: boolean
            default: false
        -
          name: hash
          in: query
          description: 'Whether to add preset hash to the response'
          schema:
            type: boolean
            default: false
        -
          name: size
          in: query
          description: 'Whether to add preset size to the response'
          schema:
            type: boolean
            default: false
        -
          name: description
          in: query
          description: 'Whether to add preset description to the response'
          schema:
            type: boolean
            default: false
        -
          name: readonly
          in: query
          description: 'Whether to add readonly field to the response'
          schema:
            type: boolean
            default: false
        -
          name: details
          in: query
          description: 'Whether to add all details to the response'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'A list of device presets.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Preset'
              example:
                status: ok
                result:
                  -
                    name: Default
                    description: 'Default profile'
                    sections:
                      - all
                    readonly: true
                  -
                    name: '1111'
                    description: ''
                    sections:
                      - system
                      - network
                      - sources
                      - edid
                      - channels
                      - afu
                      - cms
                      - avstudio
                      - frontscreen
                      - displays
                    hash: 4dfdea2c1ce6f14e46c7f7464d702358
                    size: 29696
                    readonly: false
                  -
                    name: '12'
                    description: ''
                    sections:
                      - system
                      - network
                      - sources
                      - edid
                      - channels
                      - afu
                      - cms
                      - avstudio
                      - frontscreen
                      - displays
                    hash: 75da5d4a7558ccabfbdb51e9c0e5e23a
                    size: 29696
                    readonly: false
  '/system/presets/{pid}/control/apply':
    post:
      tags:
        - Presets
      summary: 'Applies a specified preset.'
      parameters:
        -
          $ref: '#/components/parameters/presetId'
      requestBody:
        description: 'Specified preset sections to apply.'
        content:
          application/json:
            schema:
              type: object
              properties:
                sections:
                  type: array
                  items:
                    type: string
            examples:
              Default:
                value:
                  sections:
                    - system
                    - network
                    - sources
                    - edid
                    - channels
                    - afu
                    - cms
                    - avstudio
                    - frontscreen
                    - displays
        required: false
      responses:
        '200':
          description: 'Specified preset applied successfully.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: object
                    properties:
                      reboot:
                        type: boolean
                        description: 'Whether the device will be rebooted'
              examples:
                Default:
                  value:
                    status: ok
                    result:
                      reboot: true
        '400':
          $ref: '#/components/responses/missingPresetName'
        '404':
          $ref: '#/components/responses/presetNotFound'
  /system/storages:
    get:
      tags:
        - Storages
      summary: 'Returns a list of storages.'
      responses:
        '200':
          description: 'A list of storages.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Storage'
              example:
                status: ok
                result:
                  -
                    id: main
                  -
                    id: external
                  -
                    id: maintenance
  '/system/storages/{stid}/status':
    get:
      tags:
        - Storages
      summary: 'Returns the status of the specified storage.'
      parameters:
        -
          $ref: '#/components/parameters/storageId'
      responses:
        '200':
          description: 'The status of the specified storage.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/StorageStatus'
              examples:
                'Main storage':
                  value:
                    status: ok
                    result:
                      state: ready
                      total: 15809413120
                      free: 11821019136
        '404':
          $ref: '#/components/responses/storageNotFound'
  '/system/storages/{stid}/control/eject':
    post:
      tags:
        - Storages
      summary: 'Safely ejects the specified storage.'
      parameters:
        -
          $ref: '#/components/parameters/storageId'
      responses:
        '200':
          description: 'The specified storage has been ejected and can be safely removed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponse'
        '404':
          $ref: '#/components/responses/storageNotFound'
        '405':
          description: 'Specified storage does not support eject'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                'Main storage':
                  value:
                    status: notallowed
                    message: 'Storage ''main'' does not support eject'
  '/system/storages/{stid}/transfer/status':
    get:
      tags:
        - Storages
      summary: 'Returns the status of the files being transferred to the specified storage.'
      description: 'Transfer progress is only shown if this storage is not used together with AFU (Automated File Upload).'
      parameters:
        -
          $ref: '#/components/parameters/storageId'
        -
          name: storage
          in: query
          description: 'Whether to add the specified storage status to the response'
          schema:
            type: boolean
      responses:
        '200':
          description: 'The status of files being transferred to the specified storage.'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  -
                    $ref: '#/components/schemas/OkResponse'
                properties:
                  result:
                    $ref: '#/components/schemas/StorageTransferStatus'
              examples:
                'External storage':
                  value:
                    status: ok
                    result:
                      state: completed
                      session:
                        started: '2025-01-10T18:03:04-05:00'
                        completed: '2025-01-10T18:03:07-05:00'
                        total:
                          count: 3
                          size: 20113170
                        processed:
                          count: 3
                          size: 20113170
                      current_time: '2025-01-10T18:03:13-05:00'
        '404':
          $ref: '#/components/responses/storageNotFound'
        '405':
          description: 'Specified storage does not support transfer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                'Main storage':
                  value:
                    status: notallowed
                    message: 'Storage ''main'' does not support transfer'
components:
  schemas:
    AfuId:
      type: string
      description: 'Auto-assigned AFU identifier'
      example: '1'
    AfuQueue:
      required:
        - files
        - size
      type: object
      properties:
        files:
          minimum: 0
          type: integer
          description: 'Number of files to upload'
        size:
          minimum: 0
          type: integer
          description: 'Size of files in queue in bytes'
    AfuFileUploading:
      required:
        - recorder
        - id
        - uploaded
        - size
      type: object
      properties:
        recorder:
          type: string
          description: 'Recorder number where file comes from'
        id:
          type: string
          description: 'Name of uploading file'
        uploaded:
          minimum: 0
          type: integer
          description: 'Uploaded file bytes (not all AFU protocols support it)'
        size:
          minimum: 0
          type: integer
          description: 'Size of uploading file in bytes'
    AfuError:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: 'Error message'
    AfuStatus:
      required:
        - state
        - protocol
        - queue
      type: object
      properties:
        state:
          enum:
            - idle
            - paused
            - uploading
            - error
            - disabled
          type: string
        protocol:
          enum:
            - ftp
            - rsync
            - cifs
            - scp
            - sftp
            - s3
            - webdav
            - usbcopy
          type: string
        queue:
          $ref: '#/components/schemas/AfuQueue'
        file:
          $ref: '#/components/schemas/AfuFileUploading'
        error:
          $ref: '#/components/schemas/AfuError'
    IdentifiedAfuStatus:
      required:
        - id
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AfuId'
        status:
          $ref: '#/components/schemas/AfuStatus'
    Resolution:
      pattern: ^\d+x\d+$|^$
      type: string
      description: 'Video resolution (e.g. 1920x1080)'
    PublisherState:
      enum:
        - starting
        - listening
        - started
        - stopped
        - error
      type: string
    PublisherWarning:
      required:
        - text
      type: object
      properties:
        text:
          type: string
    PublisherStatus:
      required:
        - is_configured
        - started
        - state
      type: object
      properties:
        is_configured:
          type: boolean
          description: 'Whether the publisher properly configured'
        started:
          type: boolean
          description: 'Whether the publisher is running'
        duration:
          minimum: 0
          type: integer
          description: 'The duration of the publisher'' streaming'
        since:
          minimum: 0
          type: integer
          description: 'The timestamp when the publisher started (seconds since the Unix Epoch)'
        state:
          $ref: '#/components/schemas/PublisherState'
        description:
          type: string
          description: 'Error description if the state is error'
        statistics:
          type: object
          description: 'Statistics of the publisher'
          properties: {  }
        reconnections:
          minimum: 0
          type: integer
          description: 'Number of reconnections during the streaming'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/PublisherWarning'
    IdentifiedPublisherStatus:
      required:
        - id
        - type
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PublisherId'
        type:
          $ref: '#/components/schemas/PublisherType'
        status:
          $ref: '#/components/schemas/PublisherStatus'
    PublisherBaseSettings:
      required:
        - type
        - common
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PublisherType'
        common:
          required:
            - enabled
          type: object
          properties:
            enabled:
              type: boolean
              description: 'Whether the publisher is enabled'
              default: false
              x-pearl-settings-storage:
                cfgdb_name: ENABLED
            single_touch:
              type: boolean
              description: 'Whether Single Touch is enabled for the publisher'
              default: true
              x-pearl-settings-storage:
                cfgdb_name: EXCLUDE_FROM_STO
                invert: true
          x-pearl-settings-storage:
            class_name: PublisherCommonSettings
            namespace: system\Grid\Publishers\Settings\Storage
    RtspPublisherSettings:
      required:
        - rtsp
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        rtsp:
          required:
            - url
          type: object
          properties:
            disable_audio:
              type: boolean
              description: 'Whether audio is disabled'
              default: false
              x-pearl-settings-storage:
                cfgdb_name: DISABLE_AUDIO
            url:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTSP_URL
            transport:
              enum:
                - tcp
                - udp
              type: string
              default: udp
              x-pearl-settings-storage:
                cfgdb_name: RTSP_TRANSPORT
            username:
              maxLength: 250
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTSP_USERNAME
            password:
              maxLength: 250
              type: string
              format: password
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTSP_PASSWORD
          x-pearl-settings-storage:
            class_name: RtspPublisherSettingsDetails
            namespace: system\Grid\Publishers\Settings\Storage
      x-pearl-settings-storage:
        class_name: RtspPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    RtmpPublisherSettings:
      required:
        - rtmp
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        rtmp:
          required:
            - url
          type: object
          properties:
            disable_audio:
              type: boolean
              description: 'Whether audio is disabled'
              default: false
              x-pearl-settings-storage:
                cfgdb_name: DISABLE_AUDIO
            url:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTMP_URL
            stream:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTMP_STREAM
            username:
              maxLength: 250
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTMP_USERNAME
            password:
              maxLength: 250
              type: string
              format: password
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: RTMP_PASSWORD
            auto_created:
              type: boolean
          x-pearl-settings-storage:
            class_name: RtmpPublisherSettingsDetails
            namespace: system\Grid\Publishers\Settings\Storage
      x-pearl-settings-storage:
        class_name: RtmpPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    UdpPublisherCommonSettings:
      type: object
      properties:
        address:
          maxLength: 500
          pattern: '^[0-9.]*$'
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: UNICAST_ADDRESS
        sap:
          type: boolean
          description: 'Whether to enable SAP announcement'
          default: false
          x-pearl-settings-storage:
            cfgdb_name: SAP
        sap_ip:
          maxLength: 500
          pattern: '^[0-9.]*$'
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: SAP_IP
        sap_channel:
          type: integer
          default: 0
          x-pearl-settings-storage:
            cfgdb_name: SAP_CHANNEL_NO
        sap_play_group:
          maxLength: 50
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: SAP_PLAY_GROUP
        limit_bandwidth:
          type: boolean
          description: 'Whether to limit bandwidth rate'
          default: false
          x-pearl-settings-storage:
            cfgdb_name: LIMIT_BANDWIDTH
        limit_bandwidth_rate:
          minimum: 0
          type: integer
          description: 'Bandwidth rate limit in kbits'
          default: 0
          x-pearl-settings-storage:
            cfgdb_name: MULTICAST_RATE_LIMIT
    RtpUdpPublisherSettings:
      required:
        - rtp_udp
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        rtp_udp:
          required:
            - audio_port
            - video_port
          type: object
          allOf:
            -
              $ref: '#/components/schemas/UdpPublisherCommonSettings'
          properties:
            audio_port:
              maximum: 65535
              minimum: 1
              type: integer
              default: 6000
              x-pearl-settings-storage:
                cfgdb_name: UNICAST_APORT
            video_port:
              maximum: 65535
              minimum: 1
              type: integer
              default: 6002
              x-pearl-settings-storage:
                cfgdb_name: UNICAST_VPORT
          x-pearl-settings-storage:
            class_name: RtpUdpPublisherSettingsDetails
            namespace: system\Grid\Publishers\Settings\Storage
      x-pearl-settings-storage:
        class_name: RtpUdpPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    MpegTsPublisherCommonSettings:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UdpPublisherCommonSettings'
      properties:
        port:
          maximum: 65535
          minimum: 1
          type: integer
          default: 6004
          x-pearl-settings-storage:
            cfgdb_name: UNICAST_MPORT
      x-pearl-settings-storage:
        class_name: MpegTsPublisherCommonSettings
        namespace: system\Grid\Publishers\Settings\Storage
    MpegTsUdpPublisherSettings:
      required:
        - mpegts_udp
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        mpegts_udp:
          $ref: '#/components/schemas/MpegTsPublisherCommonSettings'
      x-pearl-settings-storage:
        class_name: MpegTsUdpPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    MpegTsRtpPublisherSettings:
      required:
        - mpegts_rtp
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        mpegts_rtp:
          $ref: '#/components/schemas/MpegTsPublisherCommonSettings'
      x-pearl-settings-storage:
        class_name: MpegTsRtpPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    NdiPublisherSettings:
      required:
        - ndi
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        ndi:
          type: object
          properties:
            disable_audio:
              type: boolean
              description: 'Whether audio is disabled'
              default: false
              x-pearl-settings-storage:
                cfgdb_name: DISABLE_AUDIO
            ndi_name:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: NDI_NAME
            ndi_group:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: NDI_GROUP
          x-pearl-settings-storage:
            class_name: NdiPublisherSettingsDetails
            namespace: system\Grid\Publishers\Settings\Storage
      x-pearl-settings-storage:
        class_name: NdiPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    HlsPublisherSettings:
      required:
        - hls
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        hls:
          required:
            - segment_duration
          type: object
          properties:
            disable_audio:
              type: boolean
              description: 'Whether audio is disabled'
              default: false
              x-pearl-settings-storage:
                cfgdb_name: DISABLE_AUDIO
            url:
              maxLength: 500
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_URL
            master_pl_url:
              maxLength: 500
              type: string
              description: 'Master playlist URL'
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_MASTER_PL_URL
            username:
              maxLength: 250
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_USERNAME
            password:
              maxLength: 250
              type: string
              format: password
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_PASSWORD
            segment_duration:
              maximum: 8
              minimum: 1
              type: integer
              default: 6
              x-pearl-settings-storage:
                cfgdb_name: HLS_SEGMENT_DURATION
            list_size:
              minimum: 1
              type: integer
              default: 6
              x-pearl-settings-storage:
                cfgdb_name: HLS_LIST_SIZE
            user_agent:
              maxLength: 100
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_USER_AGENT
            http_method:
              maxLength: 20
              minLength: 1
              type: string
              default: POST
              x-pearl-settings-storage:
                cfgdb_name: HLS_INGEST_METHOD
            media_seg_tmpl:
              maxLength: 1000
              type: string
              default: ''
              x-pearl-settings-storage:
                cfgdb_name: HLS_MEDIA_SEG_TMPL
          x-pearl-settings-storage:
            class_name: HlsPublisherSettingsDetails
            namespace: system\Grid\Publishers\Settings\Storage
      x-pearl-settings-storage:
        class_name: HlsPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    SrtPublisherCommonSettings:
      required:
        - mode
      type: object
      properties:
        disable_audio:
          type: boolean
          description: 'Whether audio is disabled'
          default: false
          x-pearl-settings-storage:
            cfgdb_name: DISABLE_AUDIO
        mode:
          $ref: '#/components/schemas/SrtMode'
        latency:
          maximum: 8000
          minimum: 80
          type: integer
          default: 125
          x-pearl-settings-storage:
            cfgdb_name: SRT_LATENCY
        bw_recovery_overhead:
          maximum: 100
          minimum: 5
          type: integer
          default: 25
          x-pearl-settings-storage:
            cfgdb_name: BW_RECOVERY_OVERHEAD
        encryption:
          $ref: '#/components/schemas/SrtEncryptionSettings'
    SrtPublisherCallerSettings:
      required:
        - url
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtPublisherCommonSettings'
      properties:
        url:
          maxLength: 500
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: SRT_URL
        stream_id:
          maxLength: 512
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: STREAM_ID
        source_port:
          oneOf:
            -
              enum:
                - 0
              type: integer
            -
              maximum: 65535
              minimum: 1024
              type: integer
          default: 0
          x-pearl-settings-storage:
            cfgdb_name: SOURCE_PORT
      x-pearl-settings-storage:
        class_name: SrtPublisherCallerSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\SrtPublisherHandler
    SrtPublisherRendezvousSettings:
      required:
        - url
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtPublisherCommonSettings'
      properties:
        url:
          maxLength: 500
          type: string
          default: ''
          x-pearl-settings-storage:
            cfgdb_name: SRT_URL
      x-pearl-settings-storage:
        class_name: SrtPublisherRendezvousSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\SrtPublisherHandler
    SrtPublisherListenerSettings:
      required:
        - port
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtPublisherCommonSettings'
      properties:
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          x-pearl-settings-storage:
            description: 'SrtPublisherHandler processes this property (configdb key PORT)'
      x-pearl-settings-storage:
        class_name: SrtPublisherListenerSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\SrtPublisherHandler
    SrtPublisherSettings:
      required:
        - srt
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PublisherBaseSettings'
      properties:
        srt:
          oneOf:
            -
              $ref: '#/components/schemas/SrtPublisherCallerSettings'
            -
              $ref: '#/components/schemas/SrtPublisherListenerSettings'
            -
              $ref: '#/components/schemas/SrtPublisherRendezvousSettings'
          discriminator:
            propertyName: mode
            mapping:
              listener: '#/components/schemas/SrtPublisherListenerSettings'
              caller: '#/components/schemas/SrtPublisherCallerSettings'
              rendezvous: '#/components/schemas/SrtPublisherRendezvousSettings'
          x-pearl-settings-storage:
            discriminator:
              cfgdb_name: MODE
              default: caller
      x-pearl-settings-storage:
        class_name: SrtPublisherSettings
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
    PublisherSettings:
      type: object
      oneOf:
        -
          $ref: '#/components/schemas/RtspPublisherSettings'
        -
          $ref: '#/components/schemas/RtmpPublisherSettings'
        -
          $ref: '#/components/schemas/RtpUdpPublisherSettings'
        -
          $ref: '#/components/schemas/MpegTsUdpPublisherSettings'
        -
          $ref: '#/components/schemas/MpegTsRtpPublisherSettings'
        -
          $ref: '#/components/schemas/NdiPublisherSettings'
        -
          $ref: '#/components/schemas/HlsPublisherSettings'
        -
          $ref: '#/components/schemas/SrtPublisherSettings'
      discriminator:
        propertyName: type
        mapping:
          rtsp: '#/components/schemas/RtspPublisherSettings'
          rtmp: '#/components/schemas/RtmpPublisherSettings'
          rtp-udp: '#/components/schemas/RtpUdpPublisherSettings'
          mpegts-udp: '#/components/schemas/MpegTsUdpPublisherSettings'
          mpegts-rtp: '#/components/schemas/MpegTsRtpPublisherSettings'
          ndi: '#/components/schemas/NdiPublisherSettings'
          hls: '#/components/schemas/HlsPublisherSettings'
          srt: '#/components/schemas/SrtPublisherSettings'
      x-pearl-settings-storage:
        discriminator_handler: system\Grid\Publishers\Settings\Storage\Handlers\PublisherHandler
      properties: {  }
    IdentifiedPublisherSettings:
      required:
        - id
        - name
        - settings
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PublisherId'
        name:
          maxLength: 128
          minLength: 1
          type: string
        settings:
          $ref: '#/components/schemas/PublisherSettings'
      x-pearl-settings-storage:
        save_description: 'Change publisher settings'
        class_name: SettingsStorage
        namespace: system\Grid\Publishers\Settings\Storage
        handler: system\Grid\Publishers\Settings\Storage\Handlers\IdentifiedPublisherHandler
    ChannelId:
      type: string
      description: 'Auto-assigned Channel ID'
      example: '1'
    PublisherId:
      type: string
      description: 'Auto-assigned Publisher ID'
      example: '1'
    PublisherType:
      enum:
        - rtsp
        - rtmp
        - rtp-udp
        - mpegts-udp
        - mpegts-rtp
        - ndi
        - hls
        - srt
      type: string
    IdentifiedPublisherType:
      required:
        - id
        - name
        - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PublisherId'
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/PublisherType'
    SrtMode:
      enum:
        - listener
        - caller
        - rendezvous
      type: string
      default: caller
    SrtEncryptionSettings:
      required:
        - passphrase
        - keylength
      type: object
      properties:
        passphrase:
          maxLength: 79
          minLength: 10
          type: string
          format: password
        keylength:
          enum:
            - 128
            - 192
            - 256
          type: integer
      nullable: true
    LayoutId:
      type: string
      description: 'Auto-assigned layout identifier'
      example: '1'
    Encoder:
      type: object
      properties:
        id:
          minLength: 1
          type: string
        type:
          enum:
            - audio
            - video
          type: string
        name:
          minLength: 1
          type: string
        resolution:
          $ref: '#/components/schemas/Resolution'
        framerate:
          maximum: 99
          minimum: 1
          type: integer
        bitrate:
          maximum: 50000
          minimum: 1
          type: integer
        channels:
          maximum: 2
          minimum: 1
          type: integer
          description: 'Number of audio channels: 1 for Mono, 2 for Stereo'
    Channel:
      required:
        - id
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ChannelId'
        name:
          type: string
          description: 'A human-readable name for the channel.'
        publishers:
          type: array
          items:
            type: object
            allOf:
              -
                $ref: '#/components/schemas/IdentifiedPublisherType'
            properties:
              status:
                $ref: '#/components/schemas/PublisherStatus'
              settings:
                $ref: '#/components/schemas/PublisherSettings'
        encoders:
          type: array
          items:
            $ref: '#/components/schemas/Encoder'
        active_layout:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/LayoutId'
            name:
              minLength: 1
              type: string
              description: 'A human-readable name for the layout.'
            sources:
              type: object
              properties: {  }
    ResolutionWithFps:
      pattern: ^\d+x\d+@\d+$
      type: string
      description: 'Video resolution and frames per second (e.g. 1920x1080@30)'
    InputId:
      type: string
      description: 'Auto-assigned input identifier'
      example: SRT1
    NetworkInputType:
      enum:
        - rtsp
        - srt
        - ndi
        - web-graphics
      type: string
      description: 'Describes the network type of the input, which can be added/deleted.'
    InputType:
      enum:
        - embedded
        - usb
        - rtsp
        - ndi
        - srt
        - web-graphics
      type: string
      description: 'Describes the type of the input, such as ''embedded'', ''usb'', ''rtsp'', or ''ndi''.'
    Input:
      type: object
      properties:
        id:
          type: string
          description: 'The unique identifier of the input.'
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: 'A human-readable user-defined name for the input.'
        real_device_name:
          type: string
          description: 'A human-readable default device name for the input.'
        audio:
          type: boolean
          description: 'Indicates whether the input supports audio.'
        video:
          type: boolean
          description: 'Indicates whether the input supports video.'
        type:
          $ref: '#/components/schemas/InputType'
    AudioInputSettings:
      type: object
      properties:
        delay:
          maximum: 300
          minimum: -300
          type: integer
          description: 'Delay for audio in milliseconds'
          default: 0
      description: 'Common audio settings'
    VideoInputSettings:
      type: object
      properties:
        nosignal:
          type: object
          properties:
            image:
              type: string
              description: 'File name of the picture used to show the "No Signal" image'
            timeout:
              minimum: 0
              type: integer
              description: 'Duration in seconds of the "No Signal" state after which the "No Signal" picture is shown'
              default: 5
        force_full_color_range:
          type: boolean
          description: 'Perform color range conversion from limited RGB color range (16-235) to full range (0-255)'
          default: true
        hwaccel_decoding:
          type: boolean
          description: 'Use hardware acceleration for video decoding'
          default: true
      description: 'Common video settings'
    HdmiInputSettings:
      type: object
      properties:
        deinterlacing:
          type: boolean
          description: "Convert an interlaced source signal to a non-interlaced signal.\nSupported devices:\n- Pearl 2\n- Pearl Mini\n- Pearl Nexus\n"
          default: false
        downscale_4k_to_fullhd:
          type: boolean
          description: "4K UHD source will be automatically downscaled to 1080p using the Pearl device's hardware.\nSupported devices:\n- Pearl 2 HDMI 4K input\n"
          default: true
        scaling:
          $ref: '#/components/schemas/Resolution'
        audio:
          type: object
          properties:
            mute:
              type: boolean
              description: 'Mute/unmute audio'
            delay:
              maximum: 300
              minimum: -300
              type: integer
              description: 'Delay for audio in milliseconds'
              default: 0
          description: 'HDMI audio settings'
    SdiInputSettings:
      type: object
      properties:
        downscale_4k_to_fullhd:
          type: boolean
          description: "4K UHD source will be automatically downscaled to 1080p using the Pearl device's hardware.\nSupported devices:\n- Pearl 2\n"
          default: true
        scaling:
          $ref: '#/components/schemas/Resolution'
        audio:
          type: object
          properties:
            mute:
              type: boolean
              description: 'Mute/unmute audio'
            delay:
              maximum: 300
              minimum: -300
              type: integer
              description: 'Delay for audio in milliseconds'
              default: 0
          description: 'SDI audio settings'
    SrtInputCommonSettings:
      required:
        - mode
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/SrtMode'
        latency:
          maximum: 8000
          minimum: 80
          type: integer
          default: 80
        encryption:
          $ref: '#/components/schemas/SrtEncryptionSettings'
        ts_utc_midnight_origin:
          type: boolean
          description: 'UTC midnight-based timestamps'
          default: true
    SrtInputCallerSettings:
      required:
        - url
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtInputCommonSettings'
      properties:
        url:
          maxLength: 128
          type: string
        stream_id:
          maxLength: 512
          type: string
        source_port:
          oneOf:
            -
              enum:
                - 0
              type: integer
            -
              maximum: 65535
              minimum: 1024
              type: integer
          default: 0
    SrtInputRendezvousSettings:
      required:
        - url
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtInputCommonSettings'
      properties:
        url:
          maxLength: 128
          type: string
    SrtInputListenerSettings:
      required:
        - port
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SrtInputCommonSettings'
      properties:
        port:
          maximum: 65535
          minimum: 1024
          type: integer
    RtspInputSettings:
      type: object
      properties:
        url:
          maxLength: 128
          type: string
        username:
          type: string
        password:
          type: string
        transport:
          enum:
            - udp
            - tcp
            - udp_multicast
          type: string
    AudioInputChannelSettings:
      type: object
      properties:
        gain:
          minimum: 0
          type: integer
          description: 'Capture gain for the channel in dB.'
        mute:
          type: boolean
          description: 'Mute/unmute capture for the channel.'
          default: false
    LocalAudioSettings:
      type: object
      properties:
        gain:
          minimum: 0
          type: integer
          description: "Capture gain. Units depends on the device type (dB or percentage).\nWhen `stereo_pair` is false, this setting applies to all audio channels.\nSupported devices:\n- USB audio\n- Pearl-2 analog audio\n- Pearl Mini XLR/TRS analog audio\n- Pearl Mini RCA/3.5 mm analog audio\n- Pearl Nexus XLR/TRS analog audio\n- Pearl Nexus RCA/3.5 mm analog audio\n- Pearl Nano analog audio\n"
        mute:
          type: boolean
          description: "Mute/unmute capture.\nWhen `stereo_pair` is false, this setting applies to all audio channels.\nSupported devices:\n- USB audio\n- HDMI audio (except Pearl Nano)\n- SDI audio\n- Pearl-2 analog audio\n- Pearl Mini XLR/TRS analog audio\n- Pearl Mini RCA/3.5 mm analog audio\n- Pearl Nexus XLR/TRS analog audio\n- Pearl Nexus RCA/3.5 mm analog audio\n- Pearl Nano analog audio\n"
          default: false
        phantom_power:
          type: boolean
          description: "Enable/disable phantom power (48V).\nSupported devices:\n- Pearl Mini XLR/TRS analog audio\n- Pearl Nexus XLR/TRS analog audio\n"
          default: false
        input_type:
          enum:
            - XLR
            - RCA
            - XLR+RCA
            - 3.5mm
            - RCA+3.5mm
          type: string
          description: "Input source selection for devices that support multiple input types. For example, 'XLR+RCA', 'XLR', 'RCA'.\nSupported devices:\n- Pearl-2 analog B (XLR/RCA) audio\n- Pearl Mini RCA/3.5mm analog audio\n- Pearl Nexus RCA/3.5mm analog audio\n- Pearl Nano analog audio\n"
        stereo_pair:
          type: boolean
          description: "If set to true, both audio channels have the same gain and mute settings. If false, each audio channel has individual settings.\nSupported devices:\n- Pearl-2 analog audio\n- Pearl Mini XLR/TRS analog audio\n- Pearl Nexus XLR/TRS analog audio\n- Pearl Nano analog audio\n"
          default: true
        channels:
          type: object
          properties:
            channelA:
              $ref: '#/components/schemas/AudioInputChannelSettings'
            channelB:
              $ref: '#/components/schemas/AudioInputChannelSettings'
          description: 'Channel-specific settings when `stereo_pair` is false.'
    WebGraphicsSettings:
      required:
        - url
      type: object
      properties:
        url:
          maxLength: 256
          type: string
          description: 'Input url'
        resolution:
          $ref: '#/components/schemas/Resolution'
        fps:
          maximum: 99
          minimum: 1
          type: integer
          description: 'Rendering frames per second'
          default: 30
    UsbSettings:
      type: object
      properties:
        capture_mode:
          $ref: '#/components/schemas/ResolutionWithFps'
        brightness:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Brightness of the video'
          default: 50
        contrast:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Contrast of the video'
          default: 50
        tilt:
          maximum: 64
          minimum: -64
          type: integer
          description: 'Vertical tilt of the camera'
          default: 0
        pan:
          maximum: 64
          minimum: -64
          type: integer
          description: 'Horizontal pan of the camera'
          default: 0
        saturation:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Color saturation of the video'
          default: 0
        sharpness:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Sharpness of the video'
          default: 50
        power_line_frequency:
          maximum: 2
          minimum: 0
          type: integer
          description: 'Power line frequency for noise reduction. Valid values are 0 (Disabled), 1 (50 Hz), and 2 (60 Hz).'
          default: 0
        volume:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Capturing volume in percents'
          default: 70
    NdiInputSettings:
      type: object
      properties:
        group:
          maxLength: 50
          type: string
          description: 'The name of the NDI group to which the input is assigned'
        name:
          maxLength: 128
          type: string
          description: 'NDI source name'
        extra_source_ip_addresses:
          maxLength: 512
          type: string
          description: 'Comma delimited list of IP addresses which should be queried to discover the NDI input'
        ignore_timecode:
          type: boolean
          description: 'Ignore any timecode information in the NDI signal. This is useful if the NDI source doesn''t send a timecode or if the source''s timecode is unstable.'
          default: false
    InputSettings:
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/AudioInputSettings'
        video:
          $ref: '#/components/schemas/VideoInputSettings'
        hdmi:
          $ref: '#/components/schemas/HdmiInputSettings'
        sdi:
          $ref: '#/components/schemas/SdiInputSettings'
        srt:
          oneOf:
            -
              $ref: '#/components/schemas/SrtInputCallerSettings'
            -
              $ref: '#/components/schemas/SrtInputListenerSettings'
            -
              $ref: '#/components/schemas/SrtInputRendezvousSettings'
          discriminator:
            propertyName: mode
            mapping:
              listener: '#/components/schemas/SrtInputListenerSettings'
              caller: '#/components/schemas/SrtInputCallerSettings'
              rendezvous: '#/components/schemas/SrtInputRendezvousSettings'
        rtsp:
          $ref: '#/components/schemas/RtspInputSettings'
        local_audio:
          $ref: '#/components/schemas/LocalAudioSettings'
        web_graphics:
          $ref: '#/components/schemas/WebGraphicsSettings'
        usb:
          $ref: '#/components/schemas/UsbSettings'
        ndi:
          $ref: '#/components/schemas/NdiInputSettings'
    NetworkInputSettings:
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/AudioInputSettings'
        video:
          $ref: '#/components/schemas/VideoInputSettings'
        srt:
          oneOf:
            -
              $ref: '#/components/schemas/SrtInputCallerSettings'
            -
              $ref: '#/components/schemas/SrtInputListenerSettings'
            -
              $ref: '#/components/schemas/SrtInputRendezvousSettings'
          discriminator:
            propertyName: mode
            mapping:
              listener: '#/components/schemas/SrtInputListenerSettings'
              caller: '#/components/schemas/SrtInputCallerSettings'
              rendezvous: '#/components/schemas/SrtInputRendezvousSettings'
        rtsp:
          $ref: '#/components/schemas/RtspInputSettings'
        web_graphics:
          $ref: '#/components/schemas/WebGraphicsSettings'
        ndi:
          $ref: '#/components/schemas/NdiInputSettings'
    OutputId:
      type: string
      description: 'Auto-assigned output identifier'
      example: D1
    Output:
      required:
        - id
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OutputId'
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: 'A human-readable name for the output.'
    RecorderId:
      type: string
      description: 'Auto-assigned recorder identifier'
      example: '1'
    RecorderState:
      enum:
        - disabled
        - starting
        - started
        - stopped
        - error
      type: string
    ArchiveFile:
      type: object
      properties:
        id:
          type: string
          description: 'The unique identifier of the archive file.'
        name:
          type: string
          description: 'The name of the archive file.'
        extension:
          type: string
          description: 'The media extension of the archive file.'
        recording:
          type: boolean
          description: 'Whether the recording is in progress.'
        downloaded:
          type: boolean
          description: 'Whether the archive file is downloaded.'
        created:
          type: string
          description: 'The date and time of the archive file creation.'
          format: date-time
        duration:
          type: integer
          description: 'The duration of the archive file in seconds.'
        size:
          type: integer
          description: 'The size of the archive file in bytes.'
        recorder:
          $ref: '#/components/schemas/RecorderId'
        uploading:
          type: boolean
          description: 'Whether the uploading process is in progress.'
        event_id:
          type: string
          description: 'The event identifier if the archive file is recorderded within event session.'
    Recorder:
      type: object
      properties:
        id:
          type: string
          description: 'The unique identifier of the recorder.'
        name:
          type: string
          description: 'A human-readable name for the recorder.'
        multisource:
          type: boolean
          description: 'Indicates whether the recorder is multi-source.'
    RecorderStatus:
      required:
        - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/RecorderState'
        description:
          type: string
          description: 'Error description if the state is error'
        duration:
          minimum: 0
          type: integer
        active:
          type: string
        total:
          type: string
    IdentifiedRecorderStatus:
      required:
        - id
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RecorderId'
        name:
          minLength: 1
          type: string
        status:
          $ref: '#/components/schemas/RecorderStatus'
    EventId:
      oneOf:
        -
          type: string
          description: 'Auto-assigned and unique for a given device'
          example: xxxxxxxx
        -
          enum:
            - upcoming
            - ongoing
            - running
            - paused
            - completed
          type: string
          description: "Event alias:\n* `upcoming` - next scheduled event\n* `ongoing` - ongoing event, either `running` or `paused`\n* `running` - running ongoing event\n* `paused` - paused ongoing event\n* `completed` - the most recent completed event\n\nEvent alias can be used as a parameter only and never included into a response"
          example: ongoing
      description: 'Auto-assigned and unique for a given device or an alias'
    EventStatus:
      enum:
        - scheduled
        - running
        - paused
        - finished
      type: string
      description: "Event status:\n* `scheduled` - upcoming event\n* `running` - ongoing event\n* `paused` - paused event\n* `finished` - finished event. Assets upload may be still in progress."
      example: running
    AdhocSessionKaltura:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: 'User id'
        name:
          type: string
          description: 'Full user name'
        created:
          type: integer
          description: 'Session creation time (Unix timestamp)'
        expired:
          type: integer
          description: 'Session expiration time (Unix timestamp)'
      description: 'Kaltura CMS specific ad-hoc login session'
      example:
        id: u54321
        name: 'John Doe'
        created: 1592581765
        expired: 1592581865
    AdhocEventKaltura:
      required:
        - type
        - title
        - duration
      type: object
      properties:
        type:
          enum:
            - vod
            - live
            - vod-live
          type: string
          description: "Even type:\n- `vod` - VOD (recording only)\n- `live` - Live stream only\n- `vod-live` - VOD and live stream"
        organizer:
          type: string
          description: 'Event organizer. If empty then the value from current ad-hoc session is used'
        title:
          type: string
          description: 'Event title'
        description:
          type: string
          description: 'Event description'
        start:
          type: integer
          description: "Event start time, relative or absolute.\n- 0..31536000 - number of seconds relative to current system time\n- 31536001 and above - Unix timestamp value (in seconds)"
          default: 0
        duration:
          minimum: 60
          type: integer
          description: 'Event duration in seconds'
        tags:
          type: string
        categories:
          type: string
        recorders:
          type: array
          items:
            type: string
          description: "List of channel identifiers for `vod` and `vod-live` events.\nIf empty or not specified then configured channels are used."
        live:
          type: string
          description: "Channel identifier for `live` and `vod-live` events.\nIf empty or not specified then configured value is used."
        live_backup:
          type: boolean
          description: "Use backup live stream.\nIf not specified then configured value is used."
        live_rtmps:
          type: boolean
          description: "Force to use secure RTMP protocol (RTMPS) for `live` and `vod-live` events.\nIf not specified then configured value is used."
        primaryStream:
          type: string
          description: "Streamer identifier for the `live` channel.\nUse a pre-configured RTMP streamer instead of automatically created one."
      description: "Kaltura CMS specific ad-hoc event description.\nIf there is no active ad-hoc login session then `organizer`` must be explicitly specified"
      example:
        type: vod
        title: 'Example ad-hoc event'
        description: "Example event\r\nmultiline\r\ndescription"
        start: 60
        duration: 3600
    AdhocSessionPanopto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: 'User id'
        name:
          type: string
          description: 'Full user name'
        default_folder:
          type: string
          description: 'Default folder identifier'
        created:
          type: integer
          description: 'Session creation time (Unix timestamp)'
        expired:
          type: integer
          description: 'Session expiration time (Unix timestamp)'
      description: 'Panopto CMS specific ad-hoc login session'
      example:
        id: u54321
        name: 'John Doe'
        created: 1592581765
        expired: 1592581865
    AdhocEventPanopto:
      required:
        - type
        - title
        - duration
      type: object
      properties:
        type:
          enum:
            - vod
            - live
          type: string
          description: "Even type:\n- `vod` - VOD (recording only)\n- `live` - Live stream only"
        title:
          type: string
        start:
          type: integer
          description: "Event start time, relative or absolute.\n- 0..31536000 - number of seconds relative to current system time\n- 31536001 and above - Unix timestamp value (in seconds)"
          default: 0
        duration:
          minimum: 60
          type: integer
          description: 'Event duration in seconds'
        folder:
          type: string
          description: "Destination folder identifier.\nIf empty or not specified then a default folder identifier from\ncurrent ad-hoc session is used."
          format: uuid
      description: 'Panopto CMS specific ad-hoc event description.'
      example:
        type: vod
        title: 'Example ad-hoc event'
        start: 60
        duration: 3600
    AdhocEventOpencast:
      required:
        - title
        - duration
      type: object
      properties:
        title:
          type: string
        start:
          type: integer
          description: "Event start time, relative or absolute.\n- 0..31536000 - number of seconds relative to current system time\n- 31536001 and above - Unix timestamp value (in seconds)"
          default: 0
        duration:
          minimum: 60
          type: integer
          description: 'Event duration in seconds'
        subject:
          type: string
        description:
          type: string
      description: 'Opencast CMS specific ad-hoc event description.'
      example:
        title: 'Example ad-hoc event'
        start: 60
        duration: 3600
    Event:
      required:
        - id
        - status
        - title
        - start
        - finish
      type: object
      properties:
        id:
          type: string
          description: 'Event identifier. Auto-assigned and unique for a given device.'
          readOnly: true
        status:
          $ref: '#/components/schemas/EventStatus'
        title:
          type: string
          description: 'Event title'
        start:
          type: integer
          description: 'Event scheduled/actual start time (Unix timestamp in seconds)'
        finish:
          type: integer
          description: 'Event scheduled/actual finish time (Unix timestamp in seconds)'
        recorders:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
            description: 'list of channel identifiers for VOD and VOD+Live events'
        streams:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              stream:
                type: object
                properties:
                  app:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
        tags:
          type: string
      description: 'Basic event information'
      example:
        description: "Example event\r\nmultiline\r\ndescription"
        finish: 1592573400
        id: 782ec0f4bbcc48e2a42a44eea5e69dc5
        recorders:
          -
            id: '1'
        start: 1592571600
        status: scheduled
        streams:
          -
            id: '1'
            name: 'Example event'
            stream:
              app: 0_xxxxxx_1
              type: rtmp
              url: 'rtmp://0_yyyyyy.p.kpublish.kaltura.com:1935/kLive?t=zzzzzz'
        tags: test
        title: 'Example event'
    EventDetails:
      required:
        - id
        - status
        - title
        - start
        - finish
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        ext_id:
          type: string
        extra_data:
          type: object
          properties:
            capabilities:
              type: array
              items:
                $ref: '#/components/schemas/CmsCapabilityDescriptor'
              description: 'An array of CMS capability descriptors available for the event in its current status. Each item in the array represents a specific capability and its state.'
              example:
                -
                  name: start
                  state: Disabled
                -
                  name: stop
                  state: Enabled
                -
                  name: pause
                  state: Enabled
                -
                  name: resume
                  state: Disabled
                -
                  name: extend
                  state: Disabled
            desc:
              type: string
              description: 'Additional information about the event.'
        finish:
          type: integer
        id:
          type: string
        organizer:
          type: string
        recorders:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        reminders:
          type: array
          items:
            type: object
            properties:
              at:
                type: integer
              done:
                type: boolean
              reminder:
                type: string
        scheduled_finish:
          type: integer
        scheduled_start:
          type: integer
        start:
          type: integer
        status:
          $ref: '#/components/schemas/EventStatus'
        streams:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              stream:
                type: object
                properties:
                  app:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
        tags:
          type: string
        title:
          type: string
        confirmed:
          type: boolean
          description: 'When scheduled event confirmation is enabled, scheduled event will start only if this field is set to true'
      description: 'Detailed event information'
      example:
        description: "Example event\r\nmultiline\r\ndescription"
        enabled: true
        ext_id: '3807702'
        extra_data:
          categories:
            -
              name: confirm
              state: Disabled
            -
              name: start
              state: Disabled
          desc: 'kaltura, https://www.kaltura.com, 1_wnr61iwo'
        finish: 1592571308
        id: 782ec0f4bbcc48e2a42a44eea5e69dc5
        organizer: name@company.com
        recorders:
          -
            id: '1'
        reminders:
          -
            at: 300
            done: true
            reminder: start
          -
            at: 300
            done: false
            reminder: finish
        scheduled_finish: 1592573400
        scheduled_start: 1592571600
        start: 1592571304
        status: finished
        confirmed: true
        streams:
          -
            id: '1'
            name: 'Example event'
            stream:
              app: 0_xxxxxx_1
              type: rtmp
              url: 'rtmp://0_yyyyyy.p.kpublish.kaltura.com:1935/kLive?t=zzzzzzz'
        tags: test
        title: 'Example event'
    CmsCapabilityDescriptor:
      required:
        - name
        - state
      type: object
      properties:
        name:
          enum:
            - start
            - stop
            - pause
            - resume
            - extend
            - confirm
          type: string
          description: 'The name of the CMS capability.'
          example: start
        state:
          enum:
            - Enabled
            - Disabled
          type: string
          description: 'The current state of the CMS capability.'
          example: Enabled
      description: 'Represents a CMS capability with a name and a state indicating whether it is enabled, disabled, or not supported.'
    SystemStatus:
      type: object
      properties:
        date:
          type: string
          description: 'Current system time'
          format: date-time
        uptime:
          minimum: 0
          type: integer
          description: 'Time since the last reboot in seconds'
        cpuload:
          maximum: 100
          minimum: 0
          type: integer
          description: 'Percentage of CPU load'
        cpuload_high:
          type: boolean
          description: 'Indicator of high CPU load'
        cputemp:
          type: integer
          description: 'CPU temperature in degrees Celsius'
        cputemp_threshold:
          type: integer
          description: 'Threshold after which CPU temperature is considered as too high'
      description: 'Information about system''s hardware condition'
      example:
        date: 1739540469
        uptime: 5490
        cpuload: 25
        cpuload_high: false
        cputemp: 57
        cputemp_threshold: 70
    OkResponse:
      type: object
      properties:
        status:
          enum:
            - ok
          type: string
      description: 'For successful operations `status` value is always `ok`'
      example:
        status: ok
    ErrorResponse:
      required:
        - status
        - message
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      description: "For generic error response `status` value is not `ok` (e.g. `error`) and\n`message` contain a detailed error description"
      example:
        status: error
        message: 'Detailed error description'
    FirmwareDetails:
      type: object
      properties:
        version:
          pattern: ^\d+\.\d+\.\d+$
          type: string
        revision:
          type: string
        product_id:
          type: integer
        product_name:
          type: string
    DeviceIdentity:
      type: object
      properties:
        name:
          maxLength: 50
          pattern: '^(?:[0-9]|[a-z]|[A-Z]|-| |\''|\(|\)|\[|\]|_)*$'
          type: string
        location:
          maxLength: 50
          type: string
        description:
          maxLength: 50
          type: string
    SingleTouchControlId:
      type: string
      description: 'Auto-assigned single touch control object identifier'
      example: '0'
    SingleTouchControl:
      required:
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SingleTouchControlId'
    SingleTouchControlAggregateStatus:
      required:
        - total
        - active
        - success
      type: object
      properties:
        total:
          type: integer
          description: 'The total number of single touch control object items.'
        active:
          type: integer
          description: 'The total number of single touch control object items that are currently activated.'
        success:
          type: integer
          description: 'The total number of single touch control object items without errors.'
    SingleTouchControlState:
      required:
        - pressed
        - status
        - recorders
        - publishers
      type: object
      properties:
        pressed:
          type: boolean
          description: 'Indicates whether the single touch control object is currently activated.'
        status:
          type: boolean
          description: 'Indicates whether all single touch control object recorders and publishers are started successfully'
        recorders:
          $ref: '#/components/schemas/SingleTouchControlAggregateStatus'
        publishers:
          $ref: '#/components/schemas/SingleTouchControlAggregateStatus'
    PresetId:
      minLength: 1
      type: string
      description: 'Preset identifier.'
      example: Default
    Preset:
      required:
        - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PresetId'
        description:
          type: string
        sections:
          type: array
          items:
            minLength: 1
            type: string
        hash:
          type: string
        size:
          type: integer
        readonly:
          type: boolean
    StorageId:
      enum:
        - main
        - external
        - maintenance
      type: string
      description: 'The storage identifier.'
    Storage:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/StorageId'
    StorageState:
      enum:
        - ready
        - nodev
        - dev
        - devro
        - formatting
      type: string
    StorageStatus:
      required:
        - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StorageState'
        total:
          minimum: 0
          type: integer
          format: int64
        free:
          minimum: 0
          type: integer
          format: int64
    StorageTransferState:
      enum:
        - completed
      type: string
    StorageTransferStatus:
      required:
        - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StorageTransferState'
        session:
          type: object
          properties:
            started:
              minLength: 1
              type: string
              format: date-time
            completed:
              minLength: 1
              type: string
              format: date-time
            total:
              type: object
              properties:
                count:
                  minimum: 0
                  type: integer
                size:
                  minimum: 0
                  type: integer
            processed:
              type: object
              properties:
                count:
                  minimum: 0
                  type: integer
                size:
                  minimum: 0
                  type: integer
        current_time:
          minLength: 1
          type: string
          format: date-time
  responses:
    afuNotFound:
      description: 'AFU ID not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'AFU not found':
              value:
                status: notfound
                message: 'AFU destination ''15'' not found'
    channelNotFound:
      description: 'Channel not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Channel not found':
              value:
                status: notfound
                message: 'Channel not found'
    publisherNotFound:
      description: 'Publisher not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Publisher not found':
              value:
                status: notfound
                message: 'streamer ''99'' for channel ''1'' not found'
    channelOrPublisherNotFound:
      description: 'Either channel or publisher not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Channel not found':
              value:
                status: notfound
                message: 'channel ''100'' not found'
            'Publisher not found':
              value:
                status: notfound
                message: 'streamer ''99'' for channel ''1'' not found'
    inputNotFound:
      description: 'Input not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Input not found':
              value:
                status: notfound
                message: 'Input not found'
    outputNotFound:
      description: 'Output not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Output not found':
              value:
                status: notfound
                message: 'output ''D30'' not found'
    recorderNotFound:
      description: 'Recorder not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Recorder not found':
              value:
                status: notfound
                message: 'Recorder not found'
    recorderOrFileNotFound:
      description: 'Recorder or file not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'File not found':
              value:
                status: notfound
                message: 'File not found'
    '400':
      $ref: '#/components/responses/error'
    '403':
      $ref: '#/components/responses/error'
    '404':
      $ref: '#/components/responses/error'
    '409':
      $ref: '#/components/responses/error'
    '503':
      $ref: '#/components/responses/error'
    ok:
      description: 'Generic response for successful operation without return value.'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                enum:
                  - ok
                type: string
            description: 'For successful operations `status` value is always `ok`'
            example:
              status: ok
          example:
            status: ok
    error:
      description: 'Generic failure response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    singleTouchControlNotFound:
      description: 'Single touch control object not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Single touch control object not found':
              value:
                status: notfound
                message: 'single touch control object ''30'' not found'
    missingPresetName:
      description: 'Missing preset name.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Missing preset name':
              value:
                status: badrequest
                message: 'Missing preset name'
    presetNotFound:
      description: 'Preset not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Preset not found':
              value:
                status: notfound
                message: 'Configuration preset VERYLASTCONFIG1 is not found'
    storageNotFound:
      description: 'Storage not found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            'Storage not found':
              value:
                status: notfound
                message: 'Storage ''wrongname'' not found'
  parameters:
    afuId:
      name: aid
      in: path
      description: 'Auto-assigned AFU identifier'
      required: true
      schema:
        $ref: '#/components/schemas/AfuId'
      examples:
        'First AFU ID':
          value: '0'
    channelId:
      name: cid
      in: path
      description: 'Auto-assigned Channel ID'
      required: true
      schema:
        $ref: '#/components/schemas/ChannelId'
      examples:
        'First channel':
          value: '1'
        'Second channel':
          value: '2'
        'Third channel':
          value: '3'
    publisherId:
      name: pid
      in: path
      description: 'Auto-assigned Publisher ID'
      required: true
      schema:
        $ref: '#/components/schemas/PublisherId'
      examples:
        'First publisher':
          value: '0'
        'Second publisher':
          value: '1'
        'Third publisher':
          value: '2'
    publisherType:
      name: type
      in: query
      description: 'Publisher type'
      required: true
      schema:
        $ref: '#/components/schemas/PublisherType'
      examples:
        'RTSP announce':
          value: rtsp
        'RTMP push':
          value: rtmp
        'RTP/UDP push':
          value: rtp-udp
        'MPEG-TS UDP push':
          value: mpegts-udp
        'MPEG-TS RTP/UDP push':
          value: mpegts-rtp
        NDI®:
          value: ndi
        'HLS push':
          value: hls
        'SRT push':
          value: srt
    layoutId:
      name: id
      in: query
      description: 'Auto-assigned layout identifier'
      required: true
      schema:
        $ref: '#/components/schemas/LayoutId'
      examples:
        'First layout':
          value: '1'
    commaSeparatedChannelIds:
      name: ids
      in: query
      description: "Comma separated list of channel identifiers `{cid}` to filter by.\nBy default all channels are returned.\n`cid` = the logical channel number assigned to channels in the Pearl Admin panel.\n"
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ChannelId'
      examples:
        'All channels':
          value: ''
        'First two channels':
          value: '1,2'
    includePublishers:
      name: publishers
      in: query
      description: "Whether to include publisher indentifier `{pid}`, type, and name in the response.\nA publisher is the streaming component of a Channel.\nSetting must be true to include subsequent commands in the response.\n"
      required: false
      schema:
        type: boolean
    includePublishersStatus:
      name: publishers-status
      in: query
      description: 'Whether to include the status of publishers in the response.'
      required: false
      schema:
        type: boolean
    includePublishersSettings:
      name: publishers-settings
      in: query
      description: 'Whether to include publisher configuration data for selected Channels in the response.'
      required: false
      schema:
        type: boolean
    includeEncoders:
      name: encoders
      in: query
      description: 'Whether to include video and audio encoding configuration data for selected Channels in the response.'
      required: false
      schema:
        type: boolean
    includeActiveLayout:
      name: active_layout
      in: query
      description: 'Whether to include video and audio encoding data for selected Channels in the response.'
      required: false
      schema:
        type: boolean
    inputId:
      name: sid
      in: path
      description: 'Auto-assigned input identifier'
      required: true
      schema:
        $ref: '#/components/schemas/InputId'
      examples:
        NDI:
          value: NDI1
        RTSP:
          value: RTSP1
        'SRT Listener':
          value: SRT1
        'SRT Caller':
          value: SRT2
        'SRT Rendezvous':
          value: SRT3
        USB:
          value: USBA
        'Web Graphics':
          value: WEBG1
        'Pearl Nano HDMI':
          value: hdmi
        'Pearl 2/Mini/Nexus HDMI':
          value: hdmi-a
        'Pearl Nano/Mini/Nexus SDI':
          value: sdi
        'HDMI 4K':
          value: hdmi4k-a
        'SDI 4K':
          value: sdi4k-a
        'Pearl Mini/Nexus XLR/TRS':
          value: analog-a
        'Pearl Mini/Nexus RCA/3.5mm':
          value: analog-b
        'Pearl 2 Analog A Audio':
          value: analog-a
        'Pearl 2 Analog B Audio':
          value: analog-b
        'Pearl Nano Analog Audio':
          value: analog
    commaSeparatedInputTypes:
      name: types
      in: query
      description: 'Comma separated list of input types to return. By default all inputs are returned.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/InputType'
      examples:
        'HDMI/SDI/USB/XLR/RCA inputs':
          value: 'embedded,usb'
        'Network inputs':
          value: 'rtsp,ndi,srt,web-graphics'
    inputsIds:
      name: ids
      in: query
      description: 'Comma separated list of input identifiers (source IDs) {sid} to return. By default all inputs are returned.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/InputId'
      examples:
        'All inputs':
          value: ''
        'SRT/RTSP/NDI/Web Graphics inputs':
          value: 'SRT1,RTSP1,NDI1,WEBG1'
        'Embedded inputs':
          value: 'hdmi,hdmi-a,sdi,hdmi4k-a,sdi4k-a,analog-a,analog-b,hdmi-a-audio,hdmi4k-a-audio,sdi-audio'
    outputId:
      name: did
      in: path
      description: 'Auto-assigned output identifier'
      required: true
      schema:
        $ref: '#/components/schemas/OutputId'
      examples:
        'First output':
          value: D1
        'Second output':
          value: D2
    outputSource:
      name: source
      in: query
      description: "Source to send to the output port.\nPossible values: input identifier {sid}, channel identifier {cid}, `multiview`, `deviceinfo`, `console`\n"
      required: true
      schema:
        minLength: 1
        type: string
      examples:
        'First channel':
          value: '1'
        'SRT input':
          value: SRT1
        'Local console':
          value: console
        MultiViewer:
          value: multiview
    commaSeparatedOutputIds:
      name: ids
      in: query
      description: 'Comma separated list of output identifiers (display IDs) to return. By default all outputs are returned.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/OutputId'
      examples:
        'All outputs':
          value: ''
        'First two outputs':
          value: 'D1,D2'
    recorderId:
      name: rid
      in: path
      description: 'Auto-assigned recorder identifier'
      required: true
      schema:
        $ref: '#/components/schemas/RecorderId'
      examples:
        'First recorder':
          value: '1'
        'Second recorder':
          value: '2'
        'Third recorder':
          value: '3'
    recordersIds:
      name: ids
      in: query
      description: 'Comma separated list of recorder identifiers to filter by. By default all recorders are returned.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/RecorderId'
      examples:
        'All recorders':
          value: ''
        'First two recorders':
          value: '1,2'
    fromIndex:
      name: from
      in: query
      description: 'Index of the file that will be the first item in the list. Recorded files are 0-indexed.'
      required: false
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: 'Maximum number of files that will be included in the response.'
      required: false
      schema:
        type: integer
    fileId:
      name: fid
      in: path
      description: 'ID of file to download'
      required: true
      schema:
        type: string
    eventId:
      name: eventId
      in: path
      description: 'Auto-assigned and unique for given device or an alias'
      required: true
      schema:
        $ref: '#/components/schemas/EventId'
    singleTouchControlId:
      name: stcid
      in: path
      description: 'Auto-assigned single touch control object identifier'
      required: true
      schema:
        $ref: '#/components/schemas/SingleTouchControlId'
      examples:
        First:
          value: '0'
    presetId:
      name: pid
      in: path
      description: 'Preset identifier.'
      required: true
      schema:
        $ref: '#/components/schemas/PresetId'
      examples:
        Default:
          value: Default
        'Preset not found':
          value: VERYLASTCONFIG1
    storageId:
      name: stid
      in: path
      description: 'Storage ID'
      required: true
      schema:
        $ref: '#/components/schemas/StorageId'
      examples:
        'Main storage':
          value: main
        'External storage':
          value: external
        'Maintenance storage':
          value: maintenance
        'Storage not found':
          value: wrongname
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    BasicAuth:
      type: http
      description: "Example:\n> Authorization: Basic ZGVtbzpwQDU1dzByZA =="
      scheme: basic
security:
  -
    BasicAuth: []
tags:
  -
    name: AFU
    description: 'Automatic File Upload (transfer of files) to servers and USB endpoints'
  -
    name: Publishers
    description: 'Publishers (streams) within Channels'
  -
    name: Channels
    description: 'Channel and Layout configuration, and status of Channel and Layout objects'
  -
    name: Inputs
    description: 'All available audio and video inputs'
  -
    name: Outputs
    description: 'HDMI output(s)'
  -
    name: Recorders
    description: 'Recorders in Channels and Multitrack recorders'
  -
    name: Events
    description: 'CMS and scheduled event control and monitoring'
  -
    name: 'System control'
    description: 'Power and system management'
  -
    name: Firmware
    description: 'System version control and information'
  -
    name: 'Device identity'
    description: 'General device information'
  -
    name: 'Single touch control'
    description: 'Batch action publisher (streams)/recorder control'
  -
    name: Presets
    description: 'Saved device slate (Configuration Presets)'
  -
    name: Storages
    description: 'Internal and external device storage'
